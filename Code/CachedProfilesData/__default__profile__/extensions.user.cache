{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/poseidon/.vscode/extensions/extensions.json","path":"/home/poseidon/.vscode/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1731587080796,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.95.3","productDate":"2024-11-13T14:50:04.152Z","productCommit":"f1a4fb101478ce6ec82fe9627c43efbf9e98c813","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"redhat.vscode-yaml","uuid":"2061917f-f76a-458a-8da9-f162de22b97e"},"manifest":{"name":"vscode-yaml","displayName":"YAML","description":"YAML Language Support by Red Hat, with built-in Kubernetes syntax support","author":"Red Hat","contributors":[{"name":"Joshua Pinkney","email":"jpinkney@redhat.com"},{"name":"Yevhen Vydolob","email":"yvydolob@redhat.com"}],"license":"MIT","version":"1.15.0","publisher":"redhat","bugs":"https://github.com/redhat-developer/vscode-yaml/issues","repository":{"type":"git","url":"https://github.com/redhat-developer/vscode-yaml"},"icon":"icon/icon128.png","engines":{"npm":">=7.0.0","vscode":"^1.63.0"},"categories":["Programming Languages","Linters","Snippets","Formatters"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"activationEvents":["onLanguage:yaml","onLanguage:dockercompose"],"keywords":["kubernetes","yaml","autocompletion","validation"],"main":"./dist/extension","browser":"./dist/extension-web","contributes":{"languages":[{"id":"yaml","aliases":["YAML","yaml"],"extensions":[".yml",".eyaml",".eyml",".yaml"],"filenames":[".clang-format","_clang-format"],"firstLine":"^#cloud-config","configuration":"./language-configuration.json"}],"grammars":[{"language":"yaml","scopeName":"source.yaml","path":"./syntaxes/yaml.tmLanguage.json"}],"configuration":{"title:":"YAML","properties":{"redhat.telemetry.enabled":{"type":"boolean","default":null,"markdownDescription":"Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).","scope":"window","tags":["telemetry","usesOnlineServices"]},"yaml.yamlVersion":{"type":"string","default":"1.2","enum":["1.1","1.2"],"markdownDescription":"Default YAML spec version"},"yaml.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VSCode and the YAML language service."},"yaml.schemas":{"type":"object","default":{},"description":"Associate schemas to YAML files in the current workspace"},"yaml.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default YAML formatter"},"yaml.format.singleQuote":{"type":"boolean","default":false,"description":"Use single quotes instead of double quotes"},"yaml.format.bracketSpacing":{"type":"boolean","default":true,"description":"Print spaces between brackets in objects"},"yaml.format.proseWrap":{"type":"string","default":"preserve","enum":["preserve","never","always"],"description":"Always: wrap prose if it exceeds the print width, Never: never wrap the prose, Preserve: wrap prose as-is"},"yaml.format.printWidth":{"type":"integer","default":80,"description":"Specify the line length that the printer will wrap on"},"yaml.validate":{"type":"boolean","default":true,"description":"Enable/disable validation feature"},"yaml.hover":{"type":"boolean","default":true,"description":"Enable/disable hover feature"},"yaml.completion":{"type":"boolean","default":true,"description":"Enable/disable completion feature"},"yaml.customTags":{"type":"array","default":[],"description":"Custom tags for the parser to use"},"yaml.schemaStore.enable":{"type":"boolean","default":true,"description":"Automatically pull available YAML schemas from JSON Schema Store"},"yaml.schemaStore.url":{"type":"string","default":"https://www.schemastore.org/api/json/catalog.json","description":"URL of schema store catalog to use"},"yaml.disableAdditionalProperties":{"type":"boolean","default":false,"description":"Globally set additionalProperties to false for all objects. So if its true, no extra properties are allowed inside yaml."},"yaml.disableDefaultProperties":{"type":"boolean","default":false,"description":"Disable adding not required properties with default values into completion text."},"yaml.maxItemsComputed":{"type":"integer","default":5000,"description":"The maximum number of outline symbols and folding regions computed (limited for performance reasons)."},"yaml.suggest.parentSkeletonSelectedFirst":{"type":"boolean","default":false,"description":"If true, the user must select some parent skeleton first before autocompletion starts to suggest the rest of the properties. When yaml object is not empty, autocompletion ignores this setting and returns all properties and skeletons"},"yaml.style.flowMapping":{"type":"string","enum":["allow","forbid"],"default":"allow","description":"Forbid flow style mappings"},"yaml.style.flowSequence":{"type":"string","enum":["allow","forbid"],"default":"allow","description":"Forbid flow style sequences"},"yaml.keyOrdering":{"type":"boolean","default":false,"description":"Enforces alphabetical ordering of keys in mappings when set to true"},"yaml.extension.recommendations":{"type":"boolean","default":"true","description":"Suggest additional extensions based on YAML usage."}}},"configurationDefaults":{"[yaml]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.quickSuggestions":{"other":true,"comments":false,"strings":true},"editor.autoIndent":"keep"}}},"extensionDependencies":[],"scripts":{"build":"yarn run clean && yarn run lint && yarn run vscode:prepublish","check-dependencies":"node ./scripts/check-dependencies.js","clean":"rimraf out && rimraf dist","compile":"webpack --mode none","format":"prettier --write .","lint":"eslint -c .eslintrc.js --ext .ts src test","test":"yarn test-compile && sh scripts/e2e.sh","ui-test":"yarn test-compile && extest setup-and-run -y out/test/ui-test/allTestsSuite.js -c 1.76.2","vscode:prepublish":"webpack --mode production","watch":"webpack --mode development --watch --info-verbosity verbose","test-compile":"yarn clean && tsc -p ./ && webpack --mode development","run-in-chromium":"npm run compile && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."},"devDependencies":{"@types/chai":"^4.2.12","@types/fs-extra":"^9.0.6","@types/mocha":"^2.2.48","@types/node":"^12.12.6","@types/sinon":"^10.0.6","@types/sinon-chai":"^3.2.5","@types/vscode":"^1.63.0","@types/webpack":"^4.4.10","@typescript-eslint/eslint-plugin":"^7.11.0","@typescript-eslint/parser":"^7.11.0","@vscode/test-electron":"^2.4.0","@vscode/test-web":"0.0.11","buffer":"^6.0.3","chai":"^4.2.0","crypto-browserify":"^3.12.0","eslint":"^8.57.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.4","glob":"^7.1.6","mocha":"^9.1.2","path-browserify":"^1.0.1","prettier":"2.2.1","process":"^0.11.10","rimraf":"^3.0.2","sinon":"^12.0.1","sinon-chai":"^3.7.0","ts-loader":"^9.2.5","ts-node":"^3.3.0","typescript":"^5.4.5","umd-compat-loader":"^2.1.2","url":"^0.11.0","util":"^0.12.5","vscode-extension-tester":"^5.3.0","webpack":"^5.76.1","webpack-cli":"^5.0.1"},"dependencies":{"@redhat-developer/vscode-redhat-telemetry":"^0.8.0","fs-extra":"^9.1.0","request-light":"^0.5.7","vscode-languageclient":"7.0.0","vscode-nls":"^3.2.1","vscode-uri":"^2.0.3","whatwg-fetch":"^3.6.2","yaml-language-server":"1.15.0"}},"location":{"$mid":1,"path":"/home/poseidon/.vscode/extensions/redhat.vscode-yaml-1.15.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Red Hat","metadata":{"installedTimestamp":1726732709491,"pinned":false,"source":"gallery","id":"2061917f-f76a-458a-8da9-f162de22b97e","publisherId":"eed56242-9699-4317-8bc7-e9f4b9bdd3ff","publisherDisplayName":"Red Hat","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ekelley.midnight-synth","uuid":"a0c6e528-2129-4f81-b603-615f4a2030cf"},"manifest":{"name":"midnight-synth","displayName":"Midnight Synth","description":"A dark purple/cyan theme for late night coding. Still under active development.","repository":{"type":"git","url":"https://github.com/emkelley/midnight-synth"},"scripts":{"build:dev":"vsce package","publish":"vsce publish"},"icon":"images/icon.png","publisher":"ekelley","version":"2.1.1","engines":{"vscode":"^1.46.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"Midnight Synth","uiTheme":"vs-dark","path":"./themes/Midnight Synth-color-theme.json"}]}},"location":{"$mid":1,"path":"/home/poseidon/.vscode/extensions/ekelley.midnight-synth-2.1.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Eric Kelley 🚀","metadata":{"installedTimestamp":1726732783533,"pinned":true,"source":"gallery","id":"a0c6e528-2129-4f81-b603-615f4a2030cf","publisherId":"9b0ccdbf-e871-42cb-91fe-b67003a17ca8","publisherDisplayName":"Eric Kelley 🚀","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"valentjn.vscode-ltex","uuid":"840e9c85-0e99-42ce-aa62-81088245e699"},"manifest":{"name":"vscode-ltex","displayName":"LTeX – LanguageTool grammar/spell checking","version":"13.1.0","description":"Grammar/spell checker using LanguageTool with support for LaTeX, Markdown, and others","icon":"img/logo-ltex.png","author":"Julian Valentin","publisher":"valentjn","contributors":["Julian Valentin"],"license":"MPL-2.0","homepage":"https://valentjn.github.io/ltex","repository":{"type":"git","url":"https://github.com/valentjn/vscode-ltex"},"bugs":{"url":"https://github.com/valentjn/vscode-ltex/issues"},"qna":"https://github.com/valentjn/vscode-ltex/discussions","engines":{"vscode":"^1.52.0"},"galleryBanner":{"color":"#6565f6","theme":"dark"},"keywords":["grammar","spell","languagetool","latex","markdown","multi-root ready"],"categories":["Linters","Other"],"extensionKind":["workspace"],"capabilities":{"untrustedWorkspaces":{"supported":true}},"activationEvents":["onCommand:ltex.activateExtension","onCommand:ltex.checkSelection","onCommand:ltex.checkCurrentDocument","onCommand:ltex.checkAllDocumentsInWorkspace","onCommand:ltex.clearDiagnosticsInCurrentDocument","onCommand:ltex.clearAllDiagnostics","onCommand:ltex.showStatusInformation","onCommand:ltex.resetAndRestart","onCommand:ltex.reportBug","onCommand:ltex.requestFeature","onCommand:_ltex.openMarkdownExample","onCommand:_ltex.openLatexExample","onLanguage:bibtex","onLanguage:context","onLanguage:context.tex","onLanguage:html","onLanguage:latex","onLanguage:markdown","onLanguage:org","onLanguage:restructuredtext","onLanguage:rsweave","onNotebook:*"],"contributes":{"walkthroughs":[{"id":"ltex.walkthrough","title":"Check Documents with LTeX","description":"Learn how to check spelling and grammar in Markdown and LaTeX documents.","featuredFor":["**/*.md","**/*.tex"],"steps":[{"id":"ltex.walkthrough.checkMarkdownDocuments","title":"Check Markdown documents","description":"Start your LTeX journey by checking a Markdown document.\n\n[Open Markdown Example](command:toSide:_ltex.openMarkdownExample)","media":{"markdown":"walkthrough/en/checkMarkdownDocuments.md"}},{"id":"ltex.walkthrough.checkLatexDocuments","title":"Check LaTeX documents","description":"You can check LaTeX documents if you install the LaTeX Workshop extension, if not already installed.\n\n[Install LaTeX Workshop Extension](command:workbench.extensions.installExtension?%22james-yu.latex-workshop%22)\n\nIf LaTeX Workshop is installed, check LaTeX files by opening them.\n\n[Open LaTeX Example](command:toSide:_ltex.openLatexExample)","media":{"markdown":"walkthrough/en/checkLatexDocuments.md"},"completionEvents":["onCommand:_ltex.openLatexExample"]},{"id":"ltex.walkthrough.applyQuickFixes","title":"Apply quick fixes","description":"Quickly fix errors in your document.","media":{"markdown":"walkthrough/en/applyQuickFixes.md"}},{"id":"ltex.walkthrough.customizeSettings","title":"Customize settings","description":"Configure LTeX by opening its settings.\n\n[Open LTeX Settings](command:toSide:workbench.action.openSettings?%22@ext:valentjn.vscode-ltex%22)","media":{"markdown":"walkthrough/en/customizeSettings.md"}},{"id":"ltex.walkthrough.readDocumentation","title":"Read documentation","description":"For more information and more advanced features, read LTeX's extensive documentation.\n\n[Open Documentation](https://valentjn.github.io/ltex)","media":{"markdown":"walkthrough/en/readDocumentation.md"}},{"id":"ltex.walkthrough.getInvolved","title":"Get involved","description":"Go to LTeX's GitHub page to ask questions, report bugs, and request features.\n\n[Open GitHub Page](https://github.com/valentjn/vscode-ltex)\n\nLeave a review of LTeX on VS Marketplace or on Open VSX.\n\n[Leave Review on VS Marketplace](https://marketplace.visualstudio.com/items?itemName=valentjn.vscode-ltex&ssr=false#review-details)\n\n[Leave Review on Open VSX](https://open-vsx.org/extension/valentjn/vscode-ltex/reviews)","media":{"markdown":"walkthrough/en/getInvolved.md"}}]}],"configuration":{"title":"LTeX","properties":{"ltex.enabled":{"oneOf":[{"type":"boolean"},{"type":"array","items":{"type":"string"}}],"scope":"window","default":["bibtex","context","context.tex","html","latex","markdown","org","restructuredtext","rsweave"],"markdownDescription":"Controls whether the extension is enabled. Allows disabling LanguageTool on specific workspaces or for specific code language modes (i.e., file types). [More info...](https://valentjn.github.io/ltex/settings.html#ltexenabled)","examples":[true,false,["latex","markdown"]]},"ltex.language":{"type":"string","scope":"resource","default":"en-US","enum":["auto","ar","ast-ES","be-BY","br-FR","ca-ES","ca-ES-valencia","da-DK","de","de-AT","de-CH","de-DE","de-DE-x-simple-language","el-GR","en","en-AU","en-CA","en-GB","en-NZ","en-US","en-ZA","eo","es","es-AR","fa","fr","ga-IE","gl-ES","it","ja-JP","km-KH","nl","nl-BE","pl-PL","pt","pt-AO","pt-BR","pt-MZ","pt-PT","ro-RO","ru-RU","sk-SK","sl-SI","sv","ta-IN","tl-PH","uk-UA","zh-CN"],"markdownEnumDescriptions":["Automatic language detection (not recommended)","Arabic","Asturian","Belarusian","Breton","Catalan","Catalan (Valencian)","Danish","German","German (Austria)","German (Swiss)","German (Germany)","Simple German","Greek","English","English (Australian)","English (Canadian)","English (GB)","English (New Zealand)","English (US)","English (South African)","Esperanto","Spanish","Spanish (voseo)","Persian","French","Irish","Galician","Italian","Japanese","Khmer","Dutch","Dutch (Belgium)","Polish","Portuguese","Portuguese (Angola preAO)","Portuguese (Brazil)","Portuguese (Moçambique preAO)","Portuguese (Portugal)","Romanian","Russian","Slovak","Slovenian","Swedish","Tamil","Tagalog","Ukrainian","Chinese"],"enumDescriptions":["Automatic language detection (not recommended)","Arabic","Asturian","Belarusian","Breton","Catalan","Catalan (Valencian)","Danish","German","German (Austria)","German (Swiss)","German (Germany)","Simple German","Greek","English","English (Australian)","English (Canadian)","English (GB)","English (New Zealand)","English (US)","English (South African)","Esperanto","Spanish","Spanish (voseo)","Persian","French","Irish","Galician","Italian","Japanese","Khmer","Dutch","Dutch (Belgium)","Polish","Portuguese","Portuguese (Angola preAO)","Portuguese (Brazil)","Portuguese (Moçambique preAO)","Portuguese (Portugal)","Romanian","Russian","Slovak","Slovenian","Swedish","Tamil","Tagalog","Ukrainian","Chinese"],"markdownDescription":"The language (e.g., `\"en-US\"`) LanguageTool should check against. Use a specific variant like `\"en-US\"` or `\"de-DE\"` instead of the generic language code like `\"en\"` or `\"de\"` to obtain spelling corrections (in addition to grammar corrections). [More info...](https://valentjn.github.io/ltex/settings.html#ltexlanguage)"},"ltex.dictionary":{"type":"object","scope":"resource","default":{},"propertyNames":{"type":"string","enum":["ar","ast-ES","be-BY","br-FR","ca-ES","ca-ES-valencia","da-DK","de","de-AT","de-CH","de-DE","de-DE-x-simple-language","el-GR","en","en-AU","en-CA","en-GB","en-NZ","en-US","en-ZA","eo","es","es-AR","fa","fr","ga-IE","gl-ES","it","ja-JP","km-KH","nl","nl-BE","pl-PL","pt","pt-AO","pt-BR","pt-MZ","pt-PT","ro-RO","ru-RU","sk-SK","sl-SI","sv","ta-IN","tl-PH","uk-UA","zh-CN"]},"properties":{"ar":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ar` (Arabic) words that should not be counted as spelling errors."},"ast-ES":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ast-ES` (Asturian) words that should not be counted as spelling errors."},"be-BY":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `be-BY` (Belarusian) words that should not be counted as spelling errors."},"br-FR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `br-FR` (Breton) words that should not be counted as spelling errors."},"ca-ES":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ca-ES` (Catalan) words that should not be counted as spelling errors."},"ca-ES-valencia":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ca-ES-valencia` (Catalan (Valencian)) words that should not be counted as spelling errors."},"da-DK":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `da-DK` (Danish) words that should not be counted as spelling errors."},"de":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de` (German) words that should not be counted as spelling errors."},"de-AT":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de-AT` (German (Austria)) words that should not be counted as spelling errors."},"de-CH":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de-CH` (German (Swiss)) words that should not be counted as spelling errors."},"de-DE":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de-DE` (German (Germany)) words that should not be counted as spelling errors."},"de-DE-x-simple-language":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de-DE-x-simple-language` (Simple German) words that should not be counted as spelling errors."},"el-GR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `el-GR` (Greek) words that should not be counted as spelling errors."},"en":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en` (English) words that should not be counted as spelling errors."},"en-AU":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-AU` (English (Australian)) words that should not be counted as spelling errors."},"en-CA":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-CA` (English (Canadian)) words that should not be counted as spelling errors."},"en-GB":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-GB` (English (GB)) words that should not be counted as spelling errors."},"en-NZ":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-NZ` (English (New Zealand)) words that should not be counted as spelling errors."},"en-US":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-US` (English (US)) words that should not be counted as spelling errors."},"en-ZA":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-ZA` (English (South African)) words that should not be counted as spelling errors."},"eo":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `eo` (Esperanto) words that should not be counted as spelling errors."},"es":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `es` (Spanish) words that should not be counted as spelling errors."},"es-AR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `es-AR` (Spanish (voseo)) words that should not be counted as spelling errors."},"fa":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `fa` (Persian) words that should not be counted as spelling errors."},"fr":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `fr` (French) words that should not be counted as spelling errors."},"ga-IE":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ga-IE` (Irish) words that should not be counted as spelling errors."},"gl-ES":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `gl-ES` (Galician) words that should not be counted as spelling errors."},"it":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `it` (Italian) words that should not be counted as spelling errors."},"ja-JP":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ja-JP` (Japanese) words that should not be counted as spelling errors."},"km-KH":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `km-KH` (Khmer) words that should not be counted as spelling errors."},"nl":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `nl` (Dutch) words that should not be counted as spelling errors."},"nl-BE":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `nl-BE` (Dutch (Belgium)) words that should not be counted as spelling errors."},"pl-PL":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pl-PL` (Polish) words that should not be counted as spelling errors."},"pt":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt` (Portuguese) words that should not be counted as spelling errors."},"pt-AO":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt-AO` (Portuguese (Angola preAO)) words that should not be counted as spelling errors."},"pt-BR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt-BR` (Portuguese (Brazil)) words that should not be counted as spelling errors."},"pt-MZ":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt-MZ` (Portuguese (Moçambique preAO)) words that should not be counted as spelling errors."},"pt-PT":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt-PT` (Portuguese (Portugal)) words that should not be counted as spelling errors."},"ro-RO":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ro-RO` (Romanian) words that should not be counted as spelling errors."},"ru-RU":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ru-RU` (Russian) words that should not be counted as spelling errors."},"sk-SK":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `sk-SK` (Slovak) words that should not be counted as spelling errors."},"sl-SI":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `sl-SI` (Slovenian) words that should not be counted as spelling errors."},"sv":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `sv` (Swedish) words that should not be counted as spelling errors."},"ta-IN":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ta-IN` (Tamil) words that should not be counted as spelling errors."},"tl-PH":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `tl-PH` (Tagalog) words that should not be counted as spelling errors."},"uk-UA":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `uk-UA` (Ukrainian) words that should not be counted as spelling errors."},"zh-CN":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `zh-CN` (Chinese) words that should not be counted as spelling errors."}},"additionalProperties":false,"markdownDescription":"Lists of additional words that should not be counted as spelling errors. [More info...](https://valentjn.github.io/ltex/settings.html#ltexdictionary)","examples":[{"en-US":["adaptivity","precomputed","subproblem"],"de-DE":["B-Splines",":/path/to/externalFile.txt"]}]},"ltex.disabledRules":{"type":"object","scope":"resource","default":{},"propertyNames":{"type":"string","enum":["ar","ast-ES","be-BY","br-FR","ca-ES","ca-ES-valencia","da-DK","de","de-AT","de-CH","de-DE","de-DE-x-simple-language","el-GR","en","en-AU","en-CA","en-GB","en-NZ","en-US","en-ZA","eo","es","es-AR","fa","fr","ga-IE","gl-ES","it","ja-JP","km-KH","nl","nl-BE","pl-PL","pt","pt-AO","pt-BR","pt-MZ","pt-PT","ro-RO","ru-RU","sk-SK","sl-SI","sv","ta-IN","tl-PH","uk-UA","zh-CN"]},"properties":{"ar":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ar` (Arabic) rules that should be disabled (if enabled by default by LanguageTool)."},"ast-ES":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ast-ES` (Asturian) rules that should be disabled (if enabled by default by LanguageTool)."},"be-BY":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `be-BY` (Belarusian) rules that should be disabled (if enabled by default by LanguageTool)."},"br-FR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `br-FR` (Breton) rules that should be disabled (if enabled by default by LanguageTool)."},"ca-ES":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ca-ES` (Catalan) rules that should be disabled (if enabled by default by LanguageTool)."},"ca-ES-valencia":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ca-ES-valencia` (Catalan (Valencian)) rules that should be disabled (if enabled by default by LanguageTool)."},"da-DK":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `da-DK` (Danish) rules that should be disabled (if enabled by default by LanguageTool)."},"de":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de` (German) rules that should be disabled (if enabled by default by LanguageTool)."},"de-AT":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de-AT` (German (Austria)) rules that should be disabled (if enabled by default by LanguageTool)."},"de-CH":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de-CH` (German (Swiss)) rules that should be disabled (if enabled by default by LanguageTool)."},"de-DE":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de-DE` (German (Germany)) rules that should be disabled (if enabled by default by LanguageTool)."},"de-DE-x-simple-language":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de-DE-x-simple-language` (Simple German) rules that should be disabled (if enabled by default by LanguageTool)."},"el-GR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `el-GR` (Greek) rules that should be disabled (if enabled by default by LanguageTool)."},"en":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en` (English) rules that should be disabled (if enabled by default by LanguageTool)."},"en-AU":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-AU` (English (Australian)) rules that should be disabled (if enabled by default by LanguageTool)."},"en-CA":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-CA` (English (Canadian)) rules that should be disabled (if enabled by default by LanguageTool)."},"en-GB":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-GB` (English (GB)) rules that should be disabled (if enabled by default by LanguageTool)."},"en-NZ":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-NZ` (English (New Zealand)) rules that should be disabled (if enabled by default by LanguageTool)."},"en-US":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-US` (English (US)) rules that should be disabled (if enabled by default by LanguageTool)."},"en-ZA":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-ZA` (English (South African)) rules that should be disabled (if enabled by default by LanguageTool)."},"eo":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `eo` (Esperanto) rules that should be disabled (if enabled by default by LanguageTool)."},"es":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `es` (Spanish) rules that should be disabled (if enabled by default by LanguageTool)."},"es-AR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `es-AR` (Spanish (voseo)) rules that should be disabled (if enabled by default by LanguageTool)."},"fa":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `fa` (Persian) rules that should be disabled (if enabled by default by LanguageTool)."},"fr":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `fr` (French) rules that should be disabled (if enabled by default by LanguageTool)."},"ga-IE":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ga-IE` (Irish) rules that should be disabled (if enabled by default by LanguageTool)."},"gl-ES":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `gl-ES` (Galician) rules that should be disabled (if enabled by default by LanguageTool)."},"it":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `it` (Italian) rules that should be disabled (if enabled by default by LanguageTool)."},"ja-JP":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ja-JP` (Japanese) rules that should be disabled (if enabled by default by LanguageTool)."},"km-KH":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `km-KH` (Khmer) rules that should be disabled (if enabled by default by LanguageTool)."},"nl":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `nl` (Dutch) rules that should be disabled (if enabled by default by LanguageTool)."},"nl-BE":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `nl-BE` (Dutch (Belgium)) rules that should be disabled (if enabled by default by LanguageTool)."},"pl-PL":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pl-PL` (Polish) rules that should be disabled (if enabled by default by LanguageTool)."},"pt":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt` (Portuguese) rules that should be disabled (if enabled by default by LanguageTool)."},"pt-AO":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt-AO` (Portuguese (Angola preAO)) rules that should be disabled (if enabled by default by LanguageTool)."},"pt-BR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt-BR` (Portuguese (Brazil)) rules that should be disabled (if enabled by default by LanguageTool)."},"pt-MZ":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt-MZ` (Portuguese (Moçambique preAO)) rules that should be disabled (if enabled by default by LanguageTool)."},"pt-PT":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt-PT` (Portuguese (Portugal)) rules that should be disabled (if enabled by default by LanguageTool)."},"ro-RO":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ro-RO` (Romanian) rules that should be disabled (if enabled by default by LanguageTool)."},"ru-RU":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ru-RU` (Russian) rules that should be disabled (if enabled by default by LanguageTool)."},"sk-SK":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `sk-SK` (Slovak) rules that should be disabled (if enabled by default by LanguageTool)."},"sl-SI":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `sl-SI` (Slovenian) rules that should be disabled (if enabled by default by LanguageTool)."},"sv":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `sv` (Swedish) rules that should be disabled (if enabled by default by LanguageTool)."},"ta-IN":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ta-IN` (Tamil) rules that should be disabled (if enabled by default by LanguageTool)."},"tl-PH":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `tl-PH` (Tagalog) rules that should be disabled (if enabled by default by LanguageTool)."},"uk-UA":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `uk-UA` (Ukrainian) rules that should be disabled (if enabled by default by LanguageTool)."},"zh-CN":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `zh-CN` (Chinese) rules that should be disabled (if enabled by default by LanguageTool)."}},"additionalProperties":false,"markdownDescription":"Lists of rules that should be disabled (if enabled by default by LanguageTool). [More info...](https://valentjn.github.io/ltex/settings.html#ltexdisabledrules)","examples":[{"en-US":["EN_QUOTES","UPPERCASE_SENTENCE_START",":/path/to/externalFile.txt"]}]},"ltex.enabledRules":{"type":"object","scope":"application","default":{},"propertyNames":{"type":"string","enum":["ar","ast-ES","be-BY","br-FR","ca-ES","ca-ES-valencia","da-DK","de","de-AT","de-CH","de-DE","de-DE-x-simple-language","el-GR","en","en-AU","en-CA","en-GB","en-NZ","en-US","en-ZA","eo","es","es-AR","fa","fr","ga-IE","gl-ES","it","ja-JP","km-KH","nl","nl-BE","pl-PL","pt","pt-AO","pt-BR","pt-MZ","pt-PT","ro-RO","ru-RU","sk-SK","sl-SI","sv","ta-IN","tl-PH","uk-UA","zh-CN"]},"properties":{"ar":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ar` (Arabic) rules that should be enabled (if disabled by default by LanguageTool)."},"ast-ES":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ast-ES` (Asturian) rules that should be enabled (if disabled by default by LanguageTool)."},"be-BY":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `be-BY` (Belarusian) rules that should be enabled (if disabled by default by LanguageTool)."},"br-FR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `br-FR` (Breton) rules that should be enabled (if disabled by default by LanguageTool)."},"ca-ES":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ca-ES` (Catalan) rules that should be enabled (if disabled by default by LanguageTool)."},"ca-ES-valencia":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ca-ES-valencia` (Catalan (Valencian)) rules that should be enabled (if disabled by default by LanguageTool)."},"da-DK":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `da-DK` (Danish) rules that should be enabled (if disabled by default by LanguageTool)."},"de":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de` (German) rules that should be enabled (if disabled by default by LanguageTool)."},"de-AT":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de-AT` (German (Austria)) rules that should be enabled (if disabled by default by LanguageTool)."},"de-CH":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de-CH` (German (Swiss)) rules that should be enabled (if disabled by default by LanguageTool)."},"de-DE":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de-DE` (German (Germany)) rules that should be enabled (if disabled by default by LanguageTool)."},"de-DE-x-simple-language":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `de-DE-x-simple-language` (Simple German) rules that should be enabled (if disabled by default by LanguageTool)."},"el-GR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `el-GR` (Greek) rules that should be enabled (if disabled by default by LanguageTool)."},"en":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en` (English) rules that should be enabled (if disabled by default by LanguageTool)."},"en-AU":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-AU` (English (Australian)) rules that should be enabled (if disabled by default by LanguageTool)."},"en-CA":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-CA` (English (Canadian)) rules that should be enabled (if disabled by default by LanguageTool)."},"en-GB":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-GB` (English (GB)) rules that should be enabled (if disabled by default by LanguageTool)."},"en-NZ":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-NZ` (English (New Zealand)) rules that should be enabled (if disabled by default by LanguageTool)."},"en-US":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-US` (English (US)) rules that should be enabled (if disabled by default by LanguageTool)."},"en-ZA":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `en-ZA` (English (South African)) rules that should be enabled (if disabled by default by LanguageTool)."},"eo":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `eo` (Esperanto) rules that should be enabled (if disabled by default by LanguageTool)."},"es":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `es` (Spanish) rules that should be enabled (if disabled by default by LanguageTool)."},"es-AR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `es-AR` (Spanish (voseo)) rules that should be enabled (if disabled by default by LanguageTool)."},"fa":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `fa` (Persian) rules that should be enabled (if disabled by default by LanguageTool)."},"fr":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `fr` (French) rules that should be enabled (if disabled by default by LanguageTool)."},"ga-IE":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ga-IE` (Irish) rules that should be enabled (if disabled by default by LanguageTool)."},"gl-ES":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `gl-ES` (Galician) rules that should be enabled (if disabled by default by LanguageTool)."},"it":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `it` (Italian) rules that should be enabled (if disabled by default by LanguageTool)."},"ja-JP":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ja-JP` (Japanese) rules that should be enabled (if disabled by default by LanguageTool)."},"km-KH":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `km-KH` (Khmer) rules that should be enabled (if disabled by default by LanguageTool)."},"nl":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `nl` (Dutch) rules that should be enabled (if disabled by default by LanguageTool)."},"nl-BE":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `nl-BE` (Dutch (Belgium)) rules that should be enabled (if disabled by default by LanguageTool)."},"pl-PL":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pl-PL` (Polish) rules that should be enabled (if disabled by default by LanguageTool)."},"pt":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt` (Portuguese) rules that should be enabled (if disabled by default by LanguageTool)."},"pt-AO":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt-AO` (Portuguese (Angola preAO)) rules that should be enabled (if disabled by default by LanguageTool)."},"pt-BR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt-BR` (Portuguese (Brazil)) rules that should be enabled (if disabled by default by LanguageTool)."},"pt-MZ":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt-MZ` (Portuguese (Moçambique preAO)) rules that should be enabled (if disabled by default by LanguageTool)."},"pt-PT":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `pt-PT` (Portuguese (Portugal)) rules that should be enabled (if disabled by default by LanguageTool)."},"ro-RO":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ro-RO` (Romanian) rules that should be enabled (if disabled by default by LanguageTool)."},"ru-RU":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ru-RU` (Russian) rules that should be enabled (if disabled by default by LanguageTool)."},"sk-SK":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `sk-SK` (Slovak) rules that should be enabled (if disabled by default by LanguageTool)."},"sl-SI":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `sl-SI` (Slovenian) rules that should be enabled (if disabled by default by LanguageTool)."},"sv":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `sv` (Swedish) rules that should be enabled (if disabled by default by LanguageTool)."},"ta-IN":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `ta-IN` (Tamil) rules that should be enabled (if disabled by default by LanguageTool)."},"tl-PH":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `tl-PH` (Tagalog) rules that should be enabled (if disabled by default by LanguageTool)."},"uk-UA":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `uk-UA` (Ukrainian) rules that should be enabled (if disabled by default by LanguageTool)."},"zh-CN":{"type":"array","items":{"type":"string"},"markdownDescription":"List of additional `zh-CN` (Chinese) rules that should be enabled (if disabled by default by LanguageTool)."}},"additionalProperties":false,"markdownDescription":"Lists of rules that should be enabled (if disabled by default by LanguageTool). [More info...](https://valentjn.github.io/ltex/settings.html#ltexenabledrules)","examples":[{"en-GB":["PASSIVE_VOICE","OXFORD_SPELLING_NOUNS",":/path/to/externalFile.txt"]}]},"ltex.hiddenFalsePositives":{"type":"object","scope":"resource","default":{},"propertyNames":{"type":"string","enum":["ar","ast-ES","be-BY","br-FR","ca-ES","ca-ES-valencia","da-DK","de","de-AT","de-CH","de-DE","de-DE-x-simple-language","el-GR","en","en-AU","en-CA","en-GB","en-NZ","en-US","en-ZA","eo","es","es-AR","fa","fr","ga-IE","gl-ES","it","ja-JP","km-KH","nl","nl-BE","pl-PL","pt","pt-AO","pt-BR","pt-MZ","pt-PT","ro-RO","ru-RU","sk-SK","sl-SI","sv","ta-IN","tl-PH","uk-UA","zh-CN"]},"properties":{"ar":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `ar` (Arabic) false-positive diagnostics to hide."},"ast-ES":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `ast-ES` (Asturian) false-positive diagnostics to hide."},"be-BY":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `be-BY` (Belarusian) false-positive diagnostics to hide."},"br-FR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `br-FR` (Breton) false-positive diagnostics to hide."},"ca-ES":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `ca-ES` (Catalan) false-positive diagnostics to hide."},"ca-ES-valencia":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `ca-ES-valencia` (Catalan (Valencian)) false-positive diagnostics to hide."},"da-DK":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `da-DK` (Danish) false-positive diagnostics to hide."},"de":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `de` (German) false-positive diagnostics to hide."},"de-AT":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `de-AT` (German (Austria)) false-positive diagnostics to hide."},"de-CH":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `de-CH` (German (Swiss)) false-positive diagnostics to hide."},"de-DE":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `de-DE` (German (Germany)) false-positive diagnostics to hide."},"de-DE-x-simple-language":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `de-DE-x-simple-language` (Simple German) false-positive diagnostics to hide."},"el-GR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `el-GR` (Greek) false-positive diagnostics to hide."},"en":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `en` (English) false-positive diagnostics to hide."},"en-AU":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `en-AU` (English (Australian)) false-positive diagnostics to hide."},"en-CA":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `en-CA` (English (Canadian)) false-positive diagnostics to hide."},"en-GB":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `en-GB` (English (GB)) false-positive diagnostics to hide."},"en-NZ":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `en-NZ` (English (New Zealand)) false-positive diagnostics to hide."},"en-US":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `en-US` (English (US)) false-positive diagnostics to hide."},"en-ZA":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `en-ZA` (English (South African)) false-positive diagnostics to hide."},"eo":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `eo` (Esperanto) false-positive diagnostics to hide."},"es":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `es` (Spanish) false-positive diagnostics to hide."},"es-AR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `es-AR` (Spanish (voseo)) false-positive diagnostics to hide."},"fa":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `fa` (Persian) false-positive diagnostics to hide."},"fr":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `fr` (French) false-positive diagnostics to hide."},"ga-IE":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `ga-IE` (Irish) false-positive diagnostics to hide."},"gl-ES":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `gl-ES` (Galician) false-positive diagnostics to hide."},"it":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `it` (Italian) false-positive diagnostics to hide."},"ja-JP":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `ja-JP` (Japanese) false-positive diagnostics to hide."},"km-KH":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `km-KH` (Khmer) false-positive diagnostics to hide."},"nl":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `nl` (Dutch) false-positive diagnostics to hide."},"nl-BE":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `nl-BE` (Dutch (Belgium)) false-positive diagnostics to hide."},"pl-PL":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `pl-PL` (Polish) false-positive diagnostics to hide."},"pt":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `pt` (Portuguese) false-positive diagnostics to hide."},"pt-AO":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `pt-AO` (Portuguese (Angola preAO)) false-positive diagnostics to hide."},"pt-BR":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `pt-BR` (Portuguese (Brazil)) false-positive diagnostics to hide."},"pt-MZ":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `pt-MZ` (Portuguese (Moçambique preAO)) false-positive diagnostics to hide."},"pt-PT":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `pt-PT` (Portuguese (Portugal)) false-positive diagnostics to hide."},"ro-RO":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `ro-RO` (Romanian) false-positive diagnostics to hide."},"ru-RU":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `ru-RU` (Russian) false-positive diagnostics to hide."},"sk-SK":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `sk-SK` (Slovak) false-positive diagnostics to hide."},"sl-SI":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `sl-SI` (Slovenian) false-positive diagnostics to hide."},"sv":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `sv` (Swedish) false-positive diagnostics to hide."},"ta-IN":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `ta-IN` (Tamil) false-positive diagnostics to hide."},"tl-PH":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `tl-PH` (Tagalog) false-positive diagnostics to hide."},"uk-UA":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `uk-UA` (Ukrainian) false-positive diagnostics to hide."},"zh-CN":{"type":"array","items":{"type":"string"},"markdownDescription":"List of `zh-CN` (Chinese) false-positive diagnostics to hide."}},"additionalProperties":false,"markdownDescription":"Lists of false-positive diagnostics to hide (by hiding all diagnostics of a specific rule within a specific sentence). [More info...](https://valentjn.github.io/ltex/settings.html#ltexhiddenfalsepositives)","examples":[{"en-US":[":/path/to/externalFile.txt"]}]},"ltex.bibtex.fields":{"type":"object","scope":"resource","default":{},"patternProperties":{"^.*$":{"type":"boolean"}},"additionalProperties":false,"markdownDescription":"List of BibTeX fields whose values are to be checked in BibTeX files. [More info...](https://valentjn.github.io/ltex/settings.html#ltexbibtexfields)","examples":[{"maintitle":false,"seealso":true}]},"ltex.latex.commands":{"type":"object","scope":"resource","default":{},"patternProperties":{"^.*$":{"type":"string","enum":["default","ignore","dummy","pluralDummy","vowelDummy"],"markdownEnumDescriptions":["The command is treated like unknown commands are treated by default: The command name itself is ignored, but the arguments are not ignored.","The whole command together with its arguments is ignored.","The whole command together with its arguments is replaced with a dummy word (i.e., `Dummy0`, `Dummy1`, etc.). LTeX internally uses this mechanism for equations, citations, references, and similar constructs that are part of the sentence structure and for which LanguageTool would throw an error if simply omitted from the checked text.","The whole command together with its arguments is replaced with a plural dummy word (i.e., `Dummies`). See description for `\"dummy\"`.","The whole command together with its arguments is replaced with a vowel dummy word (i.e., `Ina`). See description for `\"dummy\"`."],"enumDescriptions":["The command is treated like unknown commands are treated by default: The command name itself is ignored, but the arguments are not ignored.","The whole command together with its arguments is ignored.","The whole command together with its arguments is replaced with a dummy word (i.e., 'Dummy0', 'Dummy1', etc.). LTeX internally uses this mechanism for equations, citations, references, and similar constructs that are part of the sentence structure and for which LanguageTool would throw an error if simply omitted from the checked text.","The whole command together with its arguments is replaced with a plural dummy word (i.e., 'Dummies'). See description for \"dummy\".","The whole command together with its arguments is replaced with a vowel dummy word (i.e., 'Ina'). See description for \"dummy\"."]}},"additionalProperties":false,"markdownDescription":"List of LaTeX commands to be handled by the LaTeX parser, listed together with empty arguments (e.g., `\"\\ref{}\"`, `\"\\documentclass[]{}\"`). [More info...](https://valentjn.github.io/ltex/settings.html#ltexlatexcommands)","examples":[{"\\label{}":"ignore","\\documentclass[]{}":"ignore","\\cite{}":"dummy","\\cite[]{}":"dummy"}]},"ltex.latex.environments":{"type":"object","scope":"resource","default":{},"patternProperties":{"^.*$":{"type":"string","enum":["default","ignore"],"markdownEnumDescriptions":["The environment is treated like unknown environments are treated by default: The arguments of the environment are ignored, but the contents of the environment are not ignored.","The whole environment together with its arguments and contents is ignored."],"enumDescriptions":["The environment is treated like unknown environments are treated by default: The arguments of the environment are ignored, but the contents of the environment are not ignored.","The whole environment together with its arguments and contents is ignored."]}},"additionalProperties":false,"markdownDescription":"List of names of LaTeX environments to be handled by the LaTeX parser. [More info...](https://valentjn.github.io/ltex/settings.html#ltexlatexenvironments)","examples":[{"lstlisting":"ignore","verbatim":"ignore"}]},"ltex.markdown.nodes":{"type":"object","scope":"resource","default":{},"patternProperties":{"^.*$":{"type":"string","enum":["default","ignore","dummy","pluralDummy","vowelDummy"],"markdownEnumDescriptions":["The node is not treated specially.","The whole node together with its `Text` leaves is ignored.","The whole node together with its `Text` leaves is replaced with a dummy word (i.e., `Dummy0`, `Dummy1`, etc.). LTeX internally uses this mechanism for example for inline code (inside backticks) that is part of the sentence structure and for which LanguageTool would throw an error if simply omitted from the checked text.","The whole node together with its `Text` leaves is replaced with a plural dummy word (i.e., `Dummies`). See description for `\"dummy\"`.","The whole node together with its `Text` leaves is replaced with a vowel dummy word (i.e., `Ina`). See description for `\"dummy\"`."],"enumDescriptions":["The node is not treated specially.","The whole node together with its 'Text' leaves is ignored.","The whole node together with its 'Text' leaves is replaced with a dummy word (i.e., 'Dummy0', 'Dummy1', etc.). LTeX internally uses this mechanism for example for inline code (inside backticks) that is part of the sentence structure and for which LanguageTool would throw an error if simply omitted from the checked text.","The whole node together with its 'Text' leaves is replaced with a plural dummy word (i.e., 'Dummies'). See description for \"dummy\".","The whole node together with its 'Text' leaves is replaced with a vowel dummy word (i.e., 'Ina'). See description for \"dummy\"."]}},"additionalProperties":false,"markdownDescription":"List of Markdown node types to be handled by the Markdown parser. [More info...](https://valentjn.github.io/ltex/settings.html#ltexmarkdownnodes)","examples":[{"CodeBlock":"ignore","FencedCodeBlock":"ignore","AutoLink":"dummy","Code":"dummy"}]},"ltex.configurationTarget":{"type":"object","scope":"resource","default":{"dictionary":"workspaceFolderExternalFile","disabledRules":"workspaceFolderExternalFile","hiddenFalsePositives":"workspaceFolderExternalFile"},"propertyNames":{"type":"string","enum":["dictionary","disabledRules","hiddenFalsePositives"]},"properties":{"dictionary":{"type":"string","enum":["user","workspace","workspaceFolder","userExternalFile","workspaceExternalFile","workspaceFolderExternalFile"],"markdownEnumDescriptions":["When adding a word to the dictionary, always update the user configuration.","When adding a word to the dictionary, update the workspace configuration if currently in a workspace, otherwise update the user configuration.","When adding a word to the dictionary, update the workspace folder configuration if currently in a workspace folder, otherwise update the workspace configuration if currently in a workspace, otherwise update the user configuration.","When adding a word to the dictionary, always update the first external setting file listed in the user configuration.","When adding a word to the dictionary, update the first external setting file listed in the workspace configuration if currently in a workspace, otherwise update the analogous file in the user configuration.","When adding a word to the dictionary, update the first external setting file listed in the workspace folder configuration if currently in a workspace folder, otherwise update the analogous file in the workspace configuration if currently in a workspace, otherwise update the analogous file in the user configuration."],"enumDescriptions":["When adding a word to the dictionary, always update the user configuration.","When adding a word to the dictionary, update the workspace configuration if currently in a workspace, otherwise update the user configuration.","When adding a word to the dictionary, update the workspace folder configuration if currently in a workspace folder, otherwise update the workspace configuration if currently in a workspace, otherwise update the user configuration.","When adding a word to the dictionary, always update the first external setting file listed in the user configuration.","When adding a word to the dictionary, update the first external setting file listed in the workspace configuration if currently in a workspace, otherwise update the analogous file in the user configuration.","When adding a word to the dictionary, update the first external setting file listed in the workspace folder configuration if currently in a workspace folder, otherwise update the analogous file in the workspace configuration if currently in a workspace, otherwise update the analogous file in the user configuration."]},"disabledRules":{"type":"string","enum":["user","workspace","workspaceFolder","userExternalFile","workspaceExternalFile","workspaceFolderExternalFile"],"markdownEnumDescriptions":["When disabling a rule, always update the user configuration.","When disabling a rule, update the workspace configuration if currently in a workspace, otherwise update the user configuration.","When disabling a rule, update the workspace folder configuration if currently in a workspace folder, otherwise update the workspace configuration if currently in a workspace, otherwise update the user configuration.","When disabling a rule, always update the first external setting file listed in the user configuration.","When disabling a rule, update the first external setting file listed in the workspace configuration if currently in a workspace, otherwise update the analogous file in the user configuration.","When disabling a rule, update the first external setting file listed in the workspace folder configuration if currently in a workspace folder, otherwise update the analogous file in the workspace configuration if currently in a workspace, otherwise update the analogous file in the user configuration."],"enumDescriptions":["When disabling a rule, always update the user configuration.","When disabling a rule, update the workspace configuration if currently in a workspace, otherwise update the user configuration.","When disabling a rule, update the workspace folder configuration if currently in a workspace folder, otherwise update the workspace configuration if currently in a workspace, otherwise update the user configuration.","When disabling a rule, always update the first external setting file listed in the user configuration.","When disabling a rule, update the first external setting file listed in the workspace configuration if currently in a workspace, otherwise update the analogous file in the user configuration.","When disabling a rule, update the first external setting file listed in the workspace folder configuration if currently in a workspace folder, otherwise update the analogous file in the workspace configuration if currently in a workspace, otherwise update the analogous file in the user configuration."]},"hiddenFalsePositives":{"type":"string","enum":["user","workspace","workspaceFolder","userExternalFile","workspaceExternalFile","workspaceFolderExternalFile"],"markdownEnumDescriptions":["When hiding a false positive, always update the user configuration.","When hiding a false positive, update the workspace configuration if currently in a workspace, otherwise update the user configuration.","When hiding a false positive, update the workspace folder configuration if currently in a workspace folder, otherwise update the workspace configuration if currently in a workspace, otherwise update the user configuration.","When hiding a false positive, always update the first external setting file listed in the user configuration.","When hiding a false positive, update the first external setting file listed in the workspace configuration if currently in a workspace, otherwise update the analogous file in the user configuration.","When hiding a false positive, update the first external setting file listed in the workspace folder configuration if currently in a workspace folder, otherwise update the analogous file in the workspace configuration if currently in a workspace, otherwise update the analogous file in the user configuration."],"enumDescriptions":["When hiding a false positive, always update the user configuration.","When hiding a false positive, update the workspace configuration if currently in a workspace, otherwise update the user configuration.","When hiding a false positive, update the workspace folder configuration if currently in a workspace folder, otherwise update the workspace configuration if currently in a workspace, otherwise update the user configuration.","When hiding a false positive, always update the first external setting file listed in the user configuration.","When hiding a false positive, update the first external setting file listed in the workspace configuration if currently in a workspace, otherwise update the analogous file in the user configuration.","When hiding a false positive, update the first external setting file listed in the workspace folder configuration if currently in a workspace folder, otherwise update the analogous file in the workspace configuration if currently in a workspace, otherwise update the analogous file in the user configuration."]}},"additionalProperties":false,"markdownDescription":"Controls which `settings.json` or external setting file ([see documentation](https://valentjn.github.io/ltex/vscode-ltex/setting-scopes-files.html#external-setting-files)) to update when using one of the quick fixes."},"ltex.additionalRules.enablePickyRules":{"type":"boolean","scope":"resource","default":false,"markdownDescription":"Enable LanguageTool rules that are marked as picky and that are disabled by default, e.g., rules about passive voice, sentence length, etc., at the cost of more false positives."},"ltex.additionalRules.motherTongue":{"type":"string","scope":"resource","default":"","enum":["","ar","ast-ES","be-BY","br-FR","ca-ES","ca-ES-valencia","da-DK","de","de-AT","de-CH","de-DE","de-DE-x-simple-language","el-GR","en","en-AU","en-CA","en-GB","en-NZ","en-US","en-ZA","eo","es","es-AR","fa","fr","ga-IE","gl-ES","it","ja-JP","km-KH","nl","nl-BE","pl-PL","pt","pt-AO","pt-BR","pt-MZ","pt-PT","ro-RO","ru-RU","sk-SK","sl-SI","sv","ta-IN","tl-PH","uk-UA","zh-CN"],"markdownEnumDescriptions":["No mother tongue","Arabic","Asturian","Belarusian","Breton","Catalan","Catalan (Valencian)","Danish","German","German (Austria)","German (Swiss)","German (Germany)","Simple German","Greek","English","English (Australian)","English (Canadian)","English (GB)","English (New Zealand)","English (US)","English (South African)","Esperanto","Spanish","Spanish (voseo)","Persian","French","Irish","Galician","Italian","Japanese","Khmer","Dutch","Dutch (Belgium)","Polish","Portuguese","Portuguese (Angola preAO)","Portuguese (Brazil)","Portuguese (Moçambique preAO)","Portuguese (Portugal)","Romanian","Russian","Slovak","Slovenian","Swedish","Tamil","Tagalog","Ukrainian","Chinese"],"enumDescriptions":["No mother tongue","Arabic","Asturian","Belarusian","Breton","Catalan","Catalan (Valencian)","Danish","German","German (Austria)","German (Swiss)","German (Germany)","Simple German","Greek","English","English (Australian)","English (Canadian)","English (GB)","English (New Zealand)","English (US)","English (South African)","Esperanto","Spanish","Spanish (voseo)","Persian","French","Irish","Galician","Italian","Japanese","Khmer","Dutch","Dutch (Belgium)","Polish","Portuguese","Portuguese (Angola preAO)","Portuguese (Brazil)","Portuguese (Moçambique preAO)","Portuguese (Portugal)","Romanian","Russian","Slovak","Slovenian","Swedish","Tamil","Tagalog","Ukrainian","Chinese"],"markdownDescription":"Optional mother tongue of the user (e.g., `\"de-DE\"`). [More info...](https://valentjn.github.io/ltex/settings.html#ltexadditionalrulesmothertongue)"},"ltex.additionalRules.languageModel":{"type":"string","scope":"resource","default":"","markdownDescription":"Optional path to a directory with rules of a language model with *n*-gram occurrence counts. Set this setting to the parent directory that contains subdirectories for languages (e.g., `en`)."},"ltex.additionalRules.neuralNetworkModel":{"type":"string","scope":"resource","default":"","markdownDescription":"Optional path to a directory with rules of a pretrained neural network model."},"ltex.additionalRules.word2VecModel":{"type":"string","scope":"resource","default":"","markdownDescription":"Optional path to a directory with rules of a word2vec language model."},"ltex.languageToolHttpServerUri":{"type":"string","scope":"window","default":"","markdownDescription":"If set to a non-empty string, LTeX will not use the bundled, built-in version of LanguageTool. Instead, LTeX will connect to an external [LanguageTool HTTP server](http://wiki.languagetool.org/http-server). Set this setting to the root URI of the server, and do not append `v2/check` or similar. [More info...](https://valentjn.github.io/ltex/settings.html#ltexlanguagetoolhttpserveruri)","examples":["http://localhost:8081/"]},"ltex.languageToolOrg.username":{"type":"string","scope":"window","default":"","markdownDescription":"Username/email as used to log in at languagetool.org for Premium API access. Only relevant if `ltex.languageToolHttpServerUri` is set."},"ltex.languageToolOrg.apiKey":{"type":"string","scope":"window","default":"","markdownDescription":"API key for Premium API access. Only relevant if `ltex.languageToolHttpServerUri` is set."},"ltex.ltex-ls.path":{"type":"string","scope":"window","default":"","markdownDescription":"If set to an empty string, LTeX automatically downloads [ltex-ls from GitHub](https://github.com/valentjn/ltex-ls/releases), stores it in the folder of the extension, and uses it for the checking process. You can point this setting to an ltex-ls release you downloaded by yourself. [More info...](https://valentjn.github.io/ltex/settings.html#ltexltex-lspath)"},"ltex.ltex-ls.logLevel":{"type":"string","scope":"window","default":"fine","enum":["severe","warning","info","config","fine","finer","finest"],"markdownEnumDescriptions":["Minimum verbosity. Only log severe errors.","Very low verbosity. Only log severe errors and warnings.","Low verbosity. Additionally, log startup and shutdown messages.","Medium verbosity. Additionally, log configuration messages.","Medium to high verbosity (default). Additionally, log when LanguageTool is called or LanguageTool has to be reinitialized due to changed settings.","High verbosity. Log additional debugging information such as full texts to be checked.","Maximum verbosity. Log all available debugging information."],"enumDescriptions":["Minimum verbosity. Only log severe errors.","Very low verbosity. Only log severe errors and warnings.","Low verbosity. Additionally, log startup and shutdown messages.","Medium verbosity. Additionally, log configuration messages.","Medium to high verbosity (default). Additionally, log when LanguageTool is called or LanguageTool has to be reinitialized due to changed settings.","High verbosity. Log additional debugging information such as full texts to be checked.","Maximum verbosity. Log all available debugging information."],"markdownDescription":"Logging level (verbosity) of the ltex-ls server log, which is accessible via `View` › `Output` › `LTeX Language Server`. [More info...](https://valentjn.github.io/ltex/settings.html#ltexltex-lsloglevel)"},"ltex.java.path":{"type":"string","scope":"window","default":"","markdownDescription":"If set to an empty string, LTeX uses a Java distribution that is bundled with ltex-ls. You can point this setting to an existing Java installation on your computer to use that installation instead. [More info...](https://valentjn.github.io/ltex/settings.html#ltexjavapath)"},"ltex.java.initialHeapSize":{"type":"integer","scope":"window","default":64,"markdownDescription":"Initial size of the Java heap memory in megabytes (corresponds to Java's `-Xms` option, must be a positive integer). [More info...](https://valentjn.github.io/ltex/settings.html#ltexjavainitialheapsize)"},"ltex.java.maximumHeapSize":{"type":"integer","scope":"window","default":512,"markdownDescription":"Maximum size of the Java heap memory in megabytes (corresponds to Java's `-Xmx` option, must be a positive integer). [More info...](https://valentjn.github.io/ltex/settings.html#ltexjavamaximumheapsize)"},"ltex.sentenceCacheSize":{"type":"integer","scope":"resource","default":2000,"markdownDescription":"Size of the LanguageTool `ResultCache` in sentences (must be a positive integer). [More info...](https://valentjn.github.io/ltex/settings.html#ltexsentencecachesize)"},"ltex.completionEnabled":{"type":"boolean","scope":"resource","default":false,"markdownDescription":"Whether completion is enabled (also known as auto-completion, suggestions, or IntelliSense). [More info...](https://valentjn.github.io/ltex/settings.html#ltexcompletionenabled)"},"ltex.diagnosticSeverity":{"oneOf":[{"type":"string","enum":["error","warning","information","hint"],"markdownEnumDescriptions":["Error diagnostics are usually underlined with a red squiggly line and appear in editor, minimap, Problems tab, and Explorer.","Warning diagnostics are usually underlined with a yellow squiggly line and appear in editor, minimap, Problems tab, and Explorer.","Information diagnostics are usually underlined with a blue squiggly line and appear in editor, minimap, and Problems tab, but not in the Explorer.","Hint diagnostics are not underlined (only subtly marked) and only appear in the editor, not in minimap, Problems tab, or Explorer."],"enumDescriptions":["Error diagnostics are usually underlined with a red squiggly line and appear in editor, minimap, Problems tab, and Explorer.","Warning diagnostics are usually underlined with a yellow squiggly line and appear in editor, minimap, Problems tab, and Explorer.","Information diagnostics are usually underlined with a blue squiggly line and appear in editor, minimap, and Problems tab, but not in the Explorer.","Hint diagnostics are not underlined (only subtly marked) and only appear in the editor, not in minimap, Problems tab, or Explorer."]},{"type":"object","patternProperties":{"^.*$":{"type":"string","enum":["error","warning","information","hint"],"markdownEnumDescriptions":["Error diagnostics are usually underlined with a red squiggly line and appear in editor, minimap, Problems tab, and Explorer.","Warning diagnostics are usually underlined with a yellow squiggly line and appear in editor, minimap, Problems tab, and Explorer.","Information diagnostics are usually underlined with a blue squiggly line and appear in editor, minimap, and Problems tab, but not in the Explorer.","Hint diagnostics are not underlined (only subtly marked) and only appear in the editor, not in minimap, Problems tab, or Explorer."],"enumDescriptions":["Error diagnostics are usually underlined with a red squiggly line and appear in editor, minimap, Problems tab, and Explorer.","Warning diagnostics are usually underlined with a yellow squiggly line and appear in editor, minimap, Problems tab, and Explorer.","Information diagnostics are usually underlined with a blue squiggly line and appear in editor, minimap, and Problems tab, but not in the Explorer.","Hint diagnostics are not underlined (only subtly marked) and only appear in the editor, not in minimap, Problems tab, or Explorer."]}},"required":["default"],"additionalProperties":false}],"scope":"resource","default":"information","markdownDescription":"Severity of the diagnostics corresponding to the grammar and spelling errors. [More info...](https://valentjn.github.io/ltex/settings.html#ltexdiagnosticseverity)","examples":["information",{"PASSIVE_VOICE":"hint","default":"information"}]},"ltex.checkFrequency":{"type":"string","scope":"window","default":"edit","enum":["edit","save","manual"],"markdownEnumDescriptions":["Documents are checked when they are opened or edited (on every keystroke), or when the settings change.","Documents are checked when they are opened or saved, or when the settings change.","Documents are not checked automatically, except when the settings change. Use commands such as [`LTeX: Check Current Document`](https://valentjn.github.io/ltex/vscode-ltex/commands.html#ltex-check-current-document) to manually trigger checks."],"enumDescriptions":["Documents are checked when they are opened or edited (on every keystroke), or when the settings change.","Documents are checked when they are opened or saved, or when the settings change.","Documents are not checked automatically, except when the settings change. Use commands such as 'LTeX: Check Current Document' (see https://valentjn.github.io/ltex/vscode-ltex/commands.html#ltex-check-current-document) to manually trigger checks."],"markdownDescription":"Controls when documents should be checked. [More info...](https://valentjn.github.io/ltex/settings.html#ltexcheckfrequency)"},"ltex.clearDiagnosticsWhenClosingFile":{"type":"boolean","scope":"resource","default":true,"markdownDescription":"If set to `true`, diagnostics of a file are cleared when the file is closed."},"ltex.statusBarItem":{"type":"boolean","scope":"window","default":false,"markdownDescription":"If set to `true`, an item about the status of LTeX is shown permanently in the status bar."},"ltex.trace.server":{"type":"string","scope":"window","default":"off","enum":["off","messages","verbose"],"markdownEnumDescriptions":["Don't log any of the communication between language client and server.","Log the type of requests and responses between language client and server.","Log the type and contents of requests and responses between language client and server."],"enumDescriptions":["Don't log any of the communication between language client and server.","Log the type of requests and responses between language client and server.","Log the type and contents of requests and responses between language client and server."],"markdownDescription":"Debug setting to log the communication between language client and server. [More info...](https://valentjn.github.io/ltex/settings.html#ltextraceserver)"},"ltex.ltex-ls.languageToolHttpServerUri":{"type":"string","scope":"window","default":"","markdownDeprecationMessage":"**Deprecated:** This setting has been renamed to [`ltex.languageToolHttpServerUri`](https://valentjn.github.io/vscode-ltex/docs/settings.html#ltexlanguagetoolhttpserveruri).","deprecationMessage":"Deprecated: This setting has been renamed to 'ltex.languageToolHttpServerUri', see https://valentjn.github.io/vscode-ltex/docs/settings.html#ltexlanguagetoolhttpserveruri."},"ltex.ltex-ls.languageToolOrgUsername":{"type":"string","scope":"window","default":"","markdownDeprecationMessage":"**Deprecated:** This setting has been renamed to [`ltex.languageToolOrg.username`](https://valentjn.github.io/vscode-ltex/docs/settings.html#ltexlanguagetoolorgusername).","deprecationMessage":"Deprecated: This setting has been renamed to 'ltex.languageToolOrg.username', see https://valentjn.github.io/vscode-ltex/docs/settings.html#ltexlanguagetoolorgusername."},"ltex.ltex-ls.languageToolOrgApiKey":{"type":"string","scope":"window","default":"","markdownDeprecationMessage":"**Deprecated:** This setting has been renamed to [`ltex.languageToolOrg.apiKey`](https://valentjn.github.io/vscode-ltex/docs/settings.html#ltexlanguagetoolorgapikey).","deprecationMessage":"Deprecated: This setting has been renamed to 'ltex.languageToolOrg.apiKey', see https://valentjn.github.io/vscode-ltex/docs/settings.html#ltexlanguagetoolorgapikey."}}},"commands":[{"command":"ltex.activateExtension","title":"Activate Extension","category":"LTeX"},{"command":"ltex.checkSelection","title":"Check Selection","category":"LTeX"},{"command":"ltex.checkCurrentDocument","title":"Check Current Document","category":"LTeX"},{"command":"ltex.checkAllDocumentsInWorkspace","title":"Check All Documents in Workspace","category":"LTeX"},{"command":"ltex.clearDiagnosticsInCurrentDocument","title":"Clear Diagnostics in Current Document","category":"LTeX"},{"command":"ltex.clearAllDiagnostics","title":"Clear All Diagnostics","category":"LTeX"},{"command":"ltex.showStatusInformation","title":"Show Status Information","category":"LTeX"},{"command":"ltex.resetAndRestart","title":"Reset and Restart","category":"LTeX"},{"command":"ltex.reportBug","title":"Report Bug in LTeX","category":"LTeX"},{"command":"ltex.requestFeature","title":"Request Feature for LTeX","category":"LTeX"}]},"main":"./dist/extension.js","scripts":{"compile":"tsc","lint":"eslint --max-warnings 0 -c .eslintrc.js {src,test}/**/*.ts","watch":"tsc -watch","pretest":"git clean -f -x lib/ && npm run vscode:prepublish && python -u tools/createOfflinePackages.py --current-system","test":"mocha ./out/test/TestRunner.js","webpack":"webpack --config .webpack.config.js --mode development","webpack-dev":"webpack --config .webpack.config.js --mode development --watch","vscode:prepublish":"tsc && webpack --config .webpack.config.js --mode production && python -u tools/convertChangelog.py --xml-file changelog.xml > CHANGELOG.md","coc.nvim:prepublish":"npm run vscode:prepublish"},"devDependencies":{"@types/mocha":"9.0.0","@types/node":"16.11.7","@types/rimraf":"3.0.2","@types/semver":"7.3.9","@types/tar":"6.1.0","@types/vscode":"1.52.0","@types/webpack":"5.28.0","@typescript-eslint/eslint-plugin":"5.3.1","@typescript-eslint/parser":"5.3.1","eslint":"8.2.0","eslint-config-google":"0.14.0","eslint-plugin-only-warn":"1.0.3","mocha":"9.1.3","rimraf":"3.0.2","ts-loader":"9.2.6","typescript":"4.4.4","vscode-test":"1.6.1","webpack":"5.64.0","webpack-cli":"4.9.1"},"dependencies":{"extract-zip":"2.0.1","semver":"7.3.5","tar":"6.1.11","vscode-languageclient":"7.0.0","vscode-languageserver-protocol":"3.16.0"},"ltexAdditionalInformation":{"currentTarget":"vscode","targetChanges":{"coc.nvim":{"name":"coc-ltex","engines":{"coc":"^0.0.80","vscode":"-"},"keywords":{"coc.nvim":"+"},"activationEvents":{"onNotebook:*":"-"},"devDependencies":{"@types/node":"12.12.0","@types/vscode":"-","clipboardy":"3.0.0","coc.nvim":"0.0.81-next.7","glob":"7.2.0","vscode-test":"-"},"dependencies":{"vscode-languageclient":"-"},"moveFromDependenciesToDevDependencies":["extract-zip","semver","tar","vscode-languageserver-protocol"]}}}},"location":{"$mid":1,"path":"/home/poseidon/.vscode/extensions/valentjn.vscode-ltex-13.1.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Julian Valentin","metadata":{"installedTimestamp":1727119675400,"pinned":false,"source":"gallery","id":"840e9c85-0e99-42ce-aa62-81088245e699","publisherId":"b6e73a06-de27-4f93-94d3-f9cfb32e6173","publisherDisplayName":"Julian Valentin","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.debugpy","uuid":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615"},"manifest":{"name":"debugpy","displayName":"Python Debugger","description":"Python Debugger extension using debugpy.","version":"2024.12.0","publisher":"ms-python","enabledApiProposals":["portsAttributes","contribIssueReporter","debugVisualization","contribViewsWelcome"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python-debugger","repository":{"type":"git","url":"https://github.com/microsoft/vscode-python-debugger.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-python-debugger/issues"},"icon":"icon.png","keywords":["python","debugger","debugpy"],"engines":{"vscode":"^1.92.0"},"categories":["Debuggers"],"activationEvents":["onDebugInitialConfigurations","onDebugDynamicConfigurations:debugpy","onDebugResolve:debugpy","onLanguage:python"],"main":"./dist/extension.js","l10n":"./l10n","contributes":{"commands":[{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json"},{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue..."}],"menus":{"issue/reporter":[{"command":"debugpy.reportIssue"}],"commandPalette":[{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.viewOutput","title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"debugpy.debugInTerminal","title":"Python Debugger: Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"debugpy.debugUsingLaunchConfig","title":"Python Debugger: Debug using launch.json","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}]},"configuration":{"properties":{"debugpy.debugJustMyCode":{"default":true,"description":"When debugging only step through user-written code. Disable this to allow stepping into library code.","scope":"resource","type":"boolean"},"debugpy.showPythonInlineValues":{"default":false,"description":"Whether to display inline values in the editor while debugging.","scope":"resource","type":"boolean","tags":["experimental"]}},"title":"Python Debugger","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":["number","string"]}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":["number","string"]}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program. For string type arguments, it will pass through the shell as is, and therefore all shell variable expansions will apply. But for the array type, the values will be shell-escaped.","items":{"type":"string"},"anyOf":[{"default":"${command:pickArgs}","enum":["${command:pickArgs}"]},{"type":["array","string"]}]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the Python debug adapter executable.","type":"string"},"autoStartBrowser":{"default":false,"description":"Open external browser to launch the application","type":"boolean"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications.","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging.","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"},"guiEventLoop":{"default":"matplotlib","description":"The GUI event loop that's going to run. Possible values: \"matplotlib\", \"wx\", \"qt\", \"none\", or a custom function that'll be imported and run.","type":"string"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"}}}},"configurationSnippets":[],"label":"Python Debugger","languages":["python"],"type":"debugpy","variables":{"pickProcess":"debugpy.pickLocalProcess","pickArgs":"debugpy.pickArgs"},"when":"!virtualWorkspace && shellExecutionSupported"}],"debugVisualizers":[{"id":"inlineHexDecoder","when":"debugConfigurationType == 'debugpy' && (variableType == 'float' || variableType == 'int')"}],"viewsWelcome":[{"view":"debug","contents":"\n[Show automatic Python configurations](command:workbench.action.debug.selectandstart?%5B%22debugpy%22%5D)\n","when":"dynamicPythonConfigAvailable"}]},"extensionDependencies":["ms-python.python"],"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","test":"node ./out/test/runTest.js","vsce-package":"npx @vscode/vsce package -o python-debugger.vsix"},"devDependencies":{"@types/chai":"^4.3.4","@types/chai-as-promised":"^7.1.8","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.191","@types/mocha":"^10.0.7","@types/node":"18.x","@types/semver":"^7.3.13","@types/sinon":"^10.0.13","@types/vscode":"^1.87.0","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.24.0","chai":"^4.3.7","chai-as-promised":"^7.1.1","eslint":"^8.50.0","glob":"^8.0.3","mocha":"^10.7.0","prettier":"^3.0.3","semver":"^7.5.4","sinon":"^15.0.2","ts-loader":"^9.3.1","ts-mockito":"^2.6.1","typemoq":"^2.1.0","typescript":"^5.5.4","webpack":"^5.87.0","webpack-cli":"^5.1.4"},"dependencies":{"@vscode/debugadapter":"^1.65.0","@vscode/debugprotocol":"^1.65.0","@vscode/extension-telemetry":"^0.8.5","@vscode/python-extension":"^1.0.5","fs-extra":"^11.2.0","iconv-lite":"^0.6.3","inversify":"^6.0.1","jsonc-parser":"^3.2.0","lodash":"^4.17.21","reflect-metadata":"^0.1.13","vscode-languageclient":"^8.0.2"}},"location":{"$mid":1,"path":"/home/poseidon/.vscode/extensions/ms-python.debugpy-2024.12.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1729083699386,"pinned":false,"source":"gallery","id":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.","version":"2024.20.0","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","terminalDataWriteEvent","terminalExecuteCommandEvent","codeActionAI","notebookReplDocument","notebookVariableProvider"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.94.0-20240918"},"enableTelemetry":true,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugResolve:python","onCommand:python.copilotSetupTests","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py","workspaceContains:.venv","workspaceContains:.conda"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"problemMatchers":[{"name":"python","owner":"python","source":"python","fileLocation":"autoDetect","pattern":[{"regexp":"^.*File \\\"([^\\\"]|.*)\\\", line (\\d+).*","file":1,"line":2},{"regexp":"^\\s*(.*)\\s*$"},{"regexp":"^\\s*(.*Error.*)$","message":1}]}],"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFolder","title":"Open a Python project folder","description":"[Open](command:workbench.action.files.openFolder) or create a project folder.\n[Open Project Folder](command:workbench.action.files.openFolder)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":"workspaceFolderCount = 0"},{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."}},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment","title":"Select or create a Python environment","description":"Create an environment for your Python project or use [Select Python Interpreter](command:python.setInterpreter) to select an existing one.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"}},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."}},{"id":"python.learnMoreWithDS","title":"Keep exploring!","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Tutorial](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"}}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Python REPL"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"hide","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"]},"python.createEnvironment.trigger":{"default":"prompt","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.diagnostics.sourceMapsEnabled":{"default":false,"description":"Enable source map support for meaningful stack traces in error logs.","scope":"application","type":"boolean"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"window","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiments to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend","pythonRecommendTensorboardExt"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment.","Denotes the Tensorboard Extension recommendation experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiments to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.locator":{"default":"js","description":"[Experimental] Select implementation of environment locators. This is an experimental setting while we test native environment location.","enum":["js","native"],"tags":["onExP","preview"],"scope":"machine","type":"string"},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.pixiToolPath":{"default":"pixi","description":"Path to the pixi executable.","scope":"machine-overridable","type":"string"},"python.tensorBoard.logDirectory":{"default":"","description":"Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.","scope":"resource","type":"string","markdownDeprecationMessage":"Tensorboard support has been moved to the extension [Tensorboard extension](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.tensorboard). Instead use the setting `tensorBoard.logDirectory`.","deprecationMessage":"Tensorboard support has been moved to the extension Tensorboard extension. Instead use the setting `tensorBoard.logDirectory`."},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.terminal.shellIntegration.enabled":{"default":false,"markdownDescription":"Enable [shell integration](https://code.visualstudio.com/docs/terminal/shell-integration) for the terminals running python. Shell integration enhances the terminal experience by enabling command decorations, run recent command, improving accessibility among other things.","scope":"resource","type":"boolean","tags":["preview"]},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.REPL.sendToNativeREPL":{"default":false,"description":"Toggle to send code to Python REPL instead of the terminal on execution. Turning this on will change the behavior for both Smart Send and Run Selection/Line in the Context Menu.","scope":"resource","type":"boolean","tags":["onExP","preview"]},"python.REPL.provideVariables":{"default":true,"description":"Toggle to provide variables for the REPL variable view for the native REPL.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"deprecated":"This configuration will be deprecated soon. Please replace `python` with `debugpy` to use the new Python Debugger extension.","configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported","hiddenWhen":"true"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPL","key":"shift+enter","when":"!accessibilityModeEnabled && config.python.REPL.sendToNativeREPL && editorLangId == python && editorTextFocus && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPLEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.repl' && !inlineChatFocused"},{"command":"python.execInInteractiveWindowEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive' && !inlineChatFocused"},{"command":"python.refreshTensorBoard","key":"ctrl+r","mac":"cmd+r","when":"python.hasActiveTensorBoardSession"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock","uv.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"issue/reporter":[{"command":"python.reportIssue"}],"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && (editorLangId == python || notebookType == jupyter-notebook)"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Python REPL","when":"false"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted && !inChat  && notebookType != jupyter-notebook"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted && !inChat"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"!config.python.REPL.sendToNativeREPL && editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInREPL","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported && config.python.REPL.sendToNativeREPL"}],"editor/title":[{"command":"python.refreshTensorBoard","group":"navigation@0","when":"python.hasActiveTensorBoardSession && !virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"copilot":{"tests":{"getSetupConfirmation":"python.copilotSetupTests"}},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint --ext .ts,.js src build pythonExtensionApi","lint-fix":"eslint --fix --ext .ts,.js src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","arch":"^2.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","hash.js":"^1.1.7","iconv-lite":"^0.6.3","inversify":"^6.0.2","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.1.12","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.0.33","uint64be":"^3.0.0","unicode":"^14.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-tas-client":"^0.1.84","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^22.5.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^17.0.3","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.93.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.27.0","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-env":"^7.0.3","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^7.2.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.29.1","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-no-only-tests":"^3.3.0","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^5.0.0","gulp-typescript":"^5.0.0","mocha":"^9.2.2","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^18.0.0","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"~5.2","uuid":"^8.3.2","webpack":"^5.76.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","worker-loader":"^3.0.8","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance","ms-python.debugpy"]},"location":{"$mid":1,"path":"/home/poseidon/.vscode/extensions/ms-python.python-2024.20.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1731506744260,"pinned":false,"source":"gallery","id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.vscode-pylance","uuid":"364d2426-116a-433a-a5d8-a5098dc3afbd"},"manifest":{"name":"vscode-pylance","displayName":"Pylance","description":"A performant, feature-rich language server for Python in VS Code","version":"2024.11.2","license":"SEE LICENSE IN LICENSE.txt","author":{"name":"Microsoft Corporation"},"publisher":"ms-python","private":true,"bugs":{"url":"https://github.com/microsoft/pylance-release/issues"},"repository":{"type":"git","url":"https://github.com/microsoft/pylance-release"},"engines":{"vscode":"^1.91.0"},"keywords":["python"],"categories":["Programming Languages"],"icon":"images/icon.png","main":"./dist/extension.bundle.js","browser":"./dist/browser.extension.bundle.js","activationEvents":["onLanguage:python","workspaceContains:pyrightconfig.json"],"extensionDependencies":["ms-python.python"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Python will not be executed; the latest Python version will be used for analysis and installed libraries will not be available.","restrictedConfigurations":["python.analysis.nodeExecutable"]},"virtualWorkspaces":{"supported":"limited","description":"Analysis is limited to opened files."}},"contributes":{"commands":[{"command":"pylance.reportIssue","title":"Pylance: Report Issue..."},{"command":"pylance.indexing.clearPersistedIndices","title":"Pylance: Clear All Persisted Indices"},{"command":"pylance.profiling.start","title":"Pylance: Start Profiling"},{"command":"pylance.profiling.stop","title":"Pylance: Stop Profiling"},{"command":"pylance.logging.start","title":"Pylance: Start Logging"},{"command":"pylance.logging.stop","title":"Pylance: Stop Logging"},{"command":"pylance.gotoOutputChannel","title":"Pylance: Go to output channel"},{"command":"pylance.dumpTokens","title":"Dump token streams ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","title":"Dump parse tree ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","title":"Dump type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","title":"Pylance: Dump cached type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","title":"Pylance: Dump code flow graph for node ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.learnMoreAboutImportResolution","title":"Learn more about import resolution","enablement":"false"},{"command":"pylance.foldDocstrings","title":"Pylance: Fold All Docstrings"},{"command":"pylance.unfoldDocstrings","title":"Pylance: Unfold All Docstrings"}],"menus":{"commandPalette":[{"command":"pylance.reportIssue"},{"command":"pylance.indexing.clearPersistedIndices","when":"!isWeb"},{"command":"pylance.profiling.start","when":"!isWeb"},{"command":"pylance.profiling.stop","when":"!isWeb"},{"command":"pylance.logging.start","when":"!isWeb"},{"command":"pylance.logging.stop","when":"!isWeb"},{"command":"pylance.dumpTokens","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.foldDocstrings","when":"!isWeb"},{"command":"pylance.unfoldDocstrings","when":"!isWeb"}]},"configurationDefaults":{"[python]":{"editor.formatOnType":true,"editor.wordBasedSuggestions":"off"}},"configuration":{"type":"object","title":"Pylance","properties":{"python.analysis.inlayHints.variableTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for variable types. Hints are not displayed for assignments of literals or constants:\n```python\nfoo':list[str]' = [\"a\"]\n \n```\n","scope":"resource"},"python.analysis.inlayHints.functionReturnTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for function return types:\n```python\ndef foo(x:int) '-> int':\n\treturn x\n```\n","scope":"resource"},"python.analysis.inlayHints.callArgumentNames":{"type":"string","default":"off","markdownDescription":"Enable/disable inlay hints for call argument names:\n```python\ndatetime('year='2019, 'month='10, 'day='27)\n```\n","enum":["off","partial","all"],"enumDescriptions":["Disable inlay hints for call argument names.","Enable inlay hints for positional-or-keyword arguments while ignoring positional-only and keyword-only.","Enable inlay hints for positional-or-keyword and positional-only arguments while ignoring keyword-only."],"scope":"resource"},"python.analysis.inlayHints.pytestParameters":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for pytest function parameter types:\n```python\ndef test_foo(my_fixture: 'str'):\n\tassert(my_fixture == 'foo')\n```\n","scope":"resource"},"python.analysis.completeFunctionParens":{"type":"boolean","default":false,"description":"Add parentheses to function completions.","scope":"resource"},"python.analysis.autoImportCompletions":{"type":"boolean","default":false,"description":"Enable auto-import completions.","scope":"resource"},"python.analysis.autoFormatStrings":{"type":"boolean","default":false,"description":"When typing a '{' in a string, automatically prefix the string with an 'f'.","scope":"window"},"python.analysis.autoSearchPaths":{"type":"boolean","default":true,"description":"Automatically add common search paths like 'src'.","scope":"resource"},"python.analysis.stubPath":{"type":"string","default":"typings","description":"Path to directory containing custom type stub files.","scope":"resource"},"python.analysis.diagnosticMode":{"type":"string","default":"openFilesOnly","description":"Analysis scope for showing diagnostics.","enum":["openFilesOnly","workspace"],"enumDescriptions":["Analyzes and reports errors on only open files.","Analyzes and reports errors on all files in the workspace."],"scope":"resource"},"python.analysis.extraPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Additional import search resolution paths","scope":"resource"},"python.analysis.include":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If the path contains a '${workspaceFolder:<workspaceName>}' variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.exclude":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. Note that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories. If the path contains a '${workspaceFolder:<workspaceName>}' variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.ignore":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If the path contains a '${workspaceFolder:<workspaceName>}' variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.indexing":{"type":"boolean","default":true,"description":"Enable indexing of installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.","scope":"resource"},"python.analysis.userFileIndexingLimit":{"type":"number","default":2000,"description":"Maximum number of user files to index in the workspace. Indexing files is a performance-intensive task. Please use this setting to limit the number of files you want us to index. If you enter -1, we will index all files.","scope":"resource"},"python.analysis.persistAllIndices":{"type":"boolean","default":true,"description":"Indices for all third party libraries will be persisted to disk.","scope":"resource"},"python.analysis.includeAliasesFromUserFiles":{"type":"boolean","default":false,"description":"Include alias symbols from user files. This will make alias symbols to show up in features such as `add import`, `auto import`","scope":"resource"},"python.analysis.extraCommitChars":{"type":"boolean","default":false,"description":"Allow using '.', '(' as commit characters when applicable.","scope":"resource"},"python.analysis.useLibraryCodeForTypes":{"type":"boolean","default":true,"description":"Use library implementations to extract type information when type stub is not present.","scope":"resource"},"python.analysis.autoIndent":{"type":"boolean","default":true,"description":"Automatically adjust indentation based on language semantics when typing Python code.","scope":"window"},"python.analysis.typeCheckingMode":{"type":"string","default":"off","enum":["off","basic","standard","strict"],"description":"Defines the default rule set for type checking.","enumDescriptions":["Show diagnostics for invalid syntax, unresolved imports, undefined variables.","All rules from \"off\" + \"basic\" type checking rules.","All rules from \"basic\" + \"standard\" type checking rules.","All rules from \"standard\" + \"strict\" type checking rules."],"scope":"resource","tags":["experimental"]},"python.analysis.fixAll":{"type":"array","default":[],"items":{"enum":["source.unusedImports","source.convertImportFormat"],"enumDescriptions":["Remove unused imports.","Convert import format following python.analysis.importFormat."]},"description":"source fixes to run in fix all.","scope":"resource"},"python.analysis.packageIndexDepths":{"type":"array","default":[{"name":"sklearn","depth":2},{"name":"matplotlib","depth":2},{"name":"scipy","depth":2},{"name":"django","depth":2},{"name":"flask","depth":2},{"name":"fastapi","depth":2}],"items":{"type":"object","label":"Per package settings","required":["name"],"properties":{"name":{"type":"string","label":"Package name to configure. Empty name means all packages.","default":""},"depth":{"type":"integer","label":"Depth to scan modules.","default":1},"includeAllSymbols":{"type":"boolean","label":"'true' means include all symbols. 'false' means only symbols in __all__.","default":false}}},"markdownDescription":"Used to override how many levels under installed packages to index on a per package basis. By default, only top-level modules are indexed (depth = 1). To index submodules, increase depth by 1 for each level of submodule you want to index. Accepted values are:\n```JSON\n{\"name\": \"package name (str)\",\n \"depth\": \"depth to scan (int)\",\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\n\n```\nIf `includeAllSymbols` is set to `false`, only symbols in each package's `__all__` are included. When it's set to `true`, Pylance will index every module/top level symbol declarations in the file.  \n  \nUsage example: \n```JSON\n[\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\n]\n\n```\n","scope":"resource"},"python.analysis.typeEvaluation.strictListInference":{"type":"boolean","markdownDescription":"When inferring the type of a list, use strict type assumptions. For example, the expression `[1, 'a', 3.4]` could be inferred to be of type `list[Any]` or `list[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.strictDictionaryInference":{"type":"boolean","markdownDescription":"When inferring the type of a dictionary’s keys and values, use strict type assumptions. For example, the expression `{'a': 1, 'b': 'a'}` could be inferred to be of type `dict[str, Any]` or `dict[str, int | str]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.strictSetInference":{"type":"boolean","markdownDescription":"When inferring the type of a set, use strict type assumptions. For example, the expression `{1, 'a', 3.4}` could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.analyzeUnannotatedFunctions":{"type":"boolean","markdownDescription":"Analyze and report errors for functions and methods that have no type annotations for input parameters or return types. The default value for this setting is `true`.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.strictParameterNoneValue":{"type":"boolean","markdownDescription":"PEP 484 indicates that when a function parameter is assigned a default value of None, its type should implicitly be Optional even if the explicit type is not. When enabled, this rule requires that parameter type annotations use Optional explicitly in this case. The default value for this setting is `true`.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.enableTypeIgnoreComments":{"type":"boolean","markdownDescription":"PEP 484 defines support for `# type: ignore` comments. This switch enables or disables support for these comments. The default value for this setting is `true`. This does not affect `# pyright: ignore` comments.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.deprecateTypingAliases":{"type":"boolean","markdownDescription":"PEP 585 indicates that aliases to types in standard collections that were introduced solely to support generics are deprecated as of Python 3.9. This switch controls whether these are treated as deprecated. This applies only when pythonVersion is 3.9 or newer. The default value for this setting is `false` but may be switched to `true` in the future.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.enableReachabilityAnalysis":{"type":"boolean","markdownDescription":"If enabled, code that is determined to be unreachable by type analysis is reported using a tagged hint. This setting does not affect code that is determined to be unreachable regardless of type analysis; such code is always reported as unreachable. This setting also has no effect when when using the command-line version of pyright because it never emits tagged hints for unreachable code.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.enableExperimentalFeatures":{"type":"boolean","markdownDescription":"Enables a set of experimental (mostly undocumented) features that correspond to proposed or exploratory changes to the Python typing standard. These features will likely change or be removed, so they should not be used except for experimentation purposes. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.disableBytesTypePromotions":{"type":"boolean","markdownDescription":"Disables legacy behavior where `bytearray` and `memoryview` are considered subtypes of `bytes`. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) deprecates this behavior, but this switch is provided to restore the older behavior. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.diagnosticSeverityOverrides":{"type":"object","markdownDescription":"Allows a user to override the severity levels for individual diagnostics. Use the rule name as a key and one of \"error\", \"warning\", \"information\", \"none\", `true` (alias for \"error\") or `false` (alias for \"none\") as value. The default value shown for each diagnostic is the default when \"python.analysis.typeCheckingMode\" is set to \"off\". See [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) for defaults for each type checking mode (\"off\", \"basic\" and \"strict\").","scope":"resource","properties":{"reportGeneralTypeIssues":{"type":["string","boolean"],"description":"Diagnostics for general type inconsistencies, unsupported operations, argument/parameter mismatches, etc. Covers all of the basic type-checking rules not covered by other rules. Does not include syntax errors.","default":"none","enum":["none","information","warning","error",true,false]},"reportPropertyTypeMismatch":{"type":["string","boolean"],"description":"Diagnostics for property whose setter and getter have mismatched types.","default":"none","enum":["none","information","warning","error",true,false]},"reportFunctionMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for member accesses on functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingImports":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding imported python file or type stub file.","default":"warning","enum":["none","information","warning","error",true,false]},"reportMissingModuleSource":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding source file. This happens when a type stub is found, but the module source file was not found, indicating that the code may fail at runtime when using this execution environment. Type checking will be done using the type stub.","default":"warning","enum":["none","information","warning","error",true,false]},"reportInvalidTypeForm":{"type":["string","boolean"],"description":"Diagnostics for type expression that uses an invalid form.","default":"error","enum":["none","information","warning","error",true,false]},"reportMissingTypeStubs":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding type stub file (either a typeshed file or a custom type stub). The type checker requires type stubs to do its best job at analysis.","default":"none","enum":["none","information","warning","error",true,false]},"reportImportCycles":{"type":["string","boolean"],"description":"Diagnostics for cyclical import chains. These are not errors in Python, but they do slow down type analysis and often hint at architectural layering issues. Generally, they should be avoided.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol that is not referenced within that file.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedClass":{"type":["string","boolean"],"description":"Diagnostics for a class with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedFunction":{"type":["string","boolean"],"description":"Diagnostics for a function or method with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedVariable":{"type":["string","boolean"],"description":"Diagnostics for a variable that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportDuplicateImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol or module that is imported more than once.","default":"none","enum":["none","information","warning","error",true,false]},"reportWildcardImportFromLibrary":{"type":["string","boolean"],"description":"Diagnostics for an wildcard import from an external library.","default":"none","enum":["none","information","warning","error",true,false]},"reportAbstractUsage":{"type":["string","boolean"],"description":"Diagnostics for an attempt to instantiate an abstract or protocol class or use an abstract method.","default":"error","enum":["none","information","warning","error",true,false]},"reportArgumentType":{"type":["string","boolean"],"description":"Diagnostics for a type incompatibility for an argument to a call.","default":"error","enum":["none","information","warning","error",true,false]},"reportAssertTypeFailure":{"type":["string","boolean"],"description":"Diagnostics for a type incompatibility detected by a typing.assert_type call.","default":"error","enum":["none","information","warning","error",true,false]},"reportAssignmentType":{"type":["string","boolean"],"description":"Diagnostics for type incompatibilities for assignments.","default":"error","enum":["none","information","warning","error",true,false]},"reportAttributeAccessIssue":{"type":["string","boolean"],"description":"Diagnostics for issues involving attribute accesses.","default":"error","enum":["none","information","warning","error",true,false]},"reportCallIssue":{"type":["string","boolean"],"description":"Diagnostics for issues involving call expressions and arguments.","default":"error","enum":["none","information","warning","error",true,false]},"reportInconsistentOverload":{"type":["string","boolean"],"description":"Diagnostics for inconsistencies between function overload signatures and implementation.","default":"error","enum":["none","information","warning","error",true,false]},"reportIndexIssue":{"type":["string","boolean"],"description":"Diagnostics related to index operations and expressions.","default":"error","enum":["none","information","warning","error",true,false]},"reportInvalidTypeArguments":{"type":["string","boolean"],"description":"Diagnostics for invalid type argument usage.","default":"error","enum":["none","information","warning","error",true,false]},"reportNoOverloadImplementation":{"type":["string","boolean"],"description":"Diagnostics for an overloaded function or method with a missing implementation.","default":"error","enum":["none","information","warning","error",true,false]},"reportOperatorIssue":{"type":["string","boolean"],"description":"Diagnostics for related to unary or binary operators.","default":"error","enum":["none","information","warning","error",true,false]},"reportOptionalSubscript":{"type":["string","boolean"],"description":"Diagnostics for an attempt to subscript (index) a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a member of a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalCall":{"type":["string","boolean"],"description":"Diagnostics for an attempt to call a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalIterable":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an iterable value (e.g. within a for statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalContextManager":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as a context manager (as a parameter to a with statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalOperand":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an operand to a binary or unary operator (like '+', '==', 'or', 'not').","default":"none","enum":["none","information","warning","error",true,false]},"reportRedeclaration":{"type":["string","boolean"],"description":"Diagnostics for an attempt to declare the type of a symbol multiple times.","default":"error","enum":["none","information","warning","error",true,false]},"reportReturnType":{"type":["string","boolean"],"description":"Diagnostics related to function return type compatibility.","default":"error","enum":["none","information","warning","error",true,false]},"reportTypedDictNotRequiredAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a non-required key within a TypedDict without a check for its presence.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedFunctionDecorator":{"type":["string","boolean"],"description":"Diagnostics for function decorators that have no type annotations. These obscure the function type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedClassDecorator":{"type":["string","boolean"],"description":"Diagnostics for class decorators that have no type annotations. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedBaseClass":{"type":["string","boolean"],"description":"Diagnostics for base classes whose type cannot be determined statically. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedNamedTuple":{"type":["string","boolean"],"description":"Diagnostics when “namedtuple” is used rather than “NamedTuple”. The former contains no type information, whereas the latter does.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of private or protected variables or functions. Protected class members begin with a single underscore _ and can be accessed only by subclasses. Private class members begin with a double underscore but do not end in a double underscore and can be accessed only within the declaring class. Variables and functions declared outside of a class are considered private if their names start with either a single or double underscore, and they cannot be accessed outside of the declaring module.","default":"none","enum":["none","information","warning","error",true,false]},"reportTypeCommentUsage":{"type":["string","boolean"],"description":"Diagnostics for usage of deprecated type comments.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateImportUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of symbol imported from a \"py.typed\" module that is not re-exported from that module.","default":"none","enum":["none","information","warning","error",true,false]},"reportConstantRedefinition":{"type":["string","boolean"],"description":"Diagnostics for attempts to redefine variables whose names are all-caps with underscores and numerals.","default":"none","enum":["none","information","warning","error",true,false]},"reportDeprecated":{"type":["string","boolean"],"description":"Diagnostics for use of deprecated classes or functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleMethodOverride":{"type":["string","boolean"],"description":"Diagnostics for methods that override a method of the same name in a base class in an incompatible manner (wrong number of parameters, incompatible parameter types, or incompatible return type).","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleVariableOverride":{"type":["string","boolean"],"description":"Diagnostics for overrides in subclasses that redefine a variable in an incompatible way.","default":"none","enum":["none","information","warning","error",true,false]},"reportInconsistentConstructor":{"type":["string","boolean"],"description":"Diagnostics for __init__ and __new__ methods whose signatures are inconsistent.","default":"none","enum":["none","information","warning","error",true,false]},"reportOverlappingOverload":{"type":["string","boolean"],"description":"Diagnostics for function overloads that overlap in signature and obscure each other or have incompatible return types.","default":"none","enum":["none","information","warning","error",true,false]},"reportPossiblyUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for the use of variables that may be unbound on some code paths.","default":"error","enum":["none","information","warning","error",true,false]},"reportMissingSuperCall":{"type":["string","boolean"],"description":"Diagnostics for missing call to parent class for inherited `__init__` methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportUninitializedInstanceVariable":{"type":["string","boolean"],"description":"Diagnostics for instance variables that are not declared or initialized within class body or `__init__` method.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStringEscapeSequence":{"type":["string","boolean"],"description":"Diagnostics for invalid escape sequences used within string literals. The Python specification indicates that such sequences will generate a syntax error in future versions.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownParameterType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownArgumentType":{"type":["string","boolean"],"description":"Diagnostics for call arguments for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownLambdaType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for lambdas that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownVariableType":{"type":["string","boolean"],"description":"Diagnostics for variables that have an unknown type..","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownMemberType":{"type":["string","boolean"],"description":"Diagnostics for class or instance variables that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingParameterType":{"type":["string","boolean"],"description":"Diagnostics for parameters that are missing a type annotation.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingTypeArgument":{"type":["string","boolean"],"description":"Diagnostics for generic class reference with missing type arguments.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidTypeVarUse":{"type":["string","boolean"],"description":"Diagnostics for improper use of type variables in a function signature.","default":"none","enum":["none","information","warning","error",true,false]},"reportCallInDefaultInitializer":{"type":["string","boolean"],"description":"Diagnostics for function calls within a default value initialization expression. Such calls can mask expensive operations that are performed at module initialization time.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryIsInstance":{"type":["string","boolean"],"description":"Diagnostics for 'isinstance' or 'issubclass' calls where the result is statically determined to be always true. Such calls are often indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryCast":{"type":["string","boolean"],"description":"Diagnostics for 'cast' calls that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryComparison":{"type":["string","boolean"],"description":"Diagnostics for '==' and '!=' comparisons that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryContains":{"type":["string","boolean"],"description":"Diagnostics for 'in' operation that is statically determined to be unnecessary. Such operations are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportAssertAlwaysTrue":{"type":["string","boolean"],"description":"Diagnostics for 'assert' statement that will provably always assert. This can be indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportSelfClsParameterName":{"type":["string","boolean"],"description":"Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitStringConcatenation":{"type":["string","boolean"],"description":"Diagnostics for two or more string literals that follow each other, indicating an implicit concatenation. This is considered a bad practice and often masks bugs such as missing commas.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStubStatement":{"type":["string","boolean"],"description":"Diagnostics for type stub statements that do not conform to PEP 484.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompleteStub":{"type":["string","boolean"],"description":"Diagnostics for the use of a module-level “__getattr__” function, indicating that the stub is incomplete.","default":"none","enum":["none","information","warning","error",true,false]},"reportUndefinedVariable":{"type":["string","boolean"],"description":"Diagnostics for undefined variables.","default":"warning","enum":["none","information","warning","error",true,false]},"reportUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for the use of unbound variables.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnhashable":{"type":["string","boolean"],"description":"Diagnostics for the use of an unhashable object in a container that requires hashability.","default":"error","enum":["none","information","warning","error",true,false]},"reportUnusedCallResult":{"type":["string","boolean"],"description":"Diagnostics for call expressions whose results are not consumed and are not None.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedCoroutine":{"type":["string","boolean"],"description":"Diagnostics for call expressions that return a Coroutine and whose results are not consumed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedExcept":{"type":["string","boolean"],"description":"Diagnostics for unreachable except clause.","default":"error","enum":["none","information","warning","error",true,false]},"reportUnusedExpression":{"type":["string","boolean"],"description":"Diagnostics for simple expressions whose value is not used in any way.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnsupportedDunderAll":{"type":["string","boolean"],"description":"Diagnostics for unsupported operations performed on __all__.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryTypeIgnoreComment":{"type":["string","boolean"],"description":"Diagnostics for '# type: ignore' comments that have no effect.","default":"none","enum":["none","information","warning","error",true,false]},"reportMatchNotExhaustive":{"type":["string","boolean"],"description":"Diagnostics for 'match' statements that do not exhaustively match all possible values.","default":"none","enum":["none","information","warning","error",true,false]},"reportShadowedImports":{"type":["string","boolean"],"description":"Diagnostics for files that are overriding a module in the stdlib.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitOverride":{"type":["string","boolean"],"description":"Diagnostics for overridden methods that do not include an `@override` decorator.","default":"none","enum":["none","information","warning","error",true,false]}}},"python.analysis.disableTaggedHints":{"type":"boolean","default":false,"scope":"resource","description":"Disable hint diagnostics with special hints for grayed-out or strike-through text."},"python.analysis.logLevel":{"type":"string","default":"Information","description":"Specifies the level of logging for the Output panel","enum":["Error","Warning","Information","Trace"],"scope":"window"},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths to look for typeshed modules.","scope":"resource"},"python.analysis.importFormat":{"type":"string","default":"absolute","enum":["absolute","relative"],"description":"Defines the default format for importing modules.","enumDescriptions":["Use absolute import format when creating new import statement.","Use relative import format when creating new import statement."],"scope":"resource"},"python.analysis.enableSyncServer":{"type":"boolean","default":false,"scope":"window","description":"Use sync server mode [Experimental]. For internal use only, may cause Pylance to stop working.","tags":["experimental"]},"python.analysis.reportExtraTelemetry":{"type":"boolean","default":false,"scope":"window","description":"Report extra telemetry [Experimental]. For internal use only, may cause Pylance to slow down.","tags":["experimental"]},"python.analysis.enablePytestSupport":{"type":"boolean","default":true,"description":"Enables pytest support in Pylance.","scope":"resource"},"python.analysis.gotoDefinitionInStringLiteral":{"type":"boolean","default":true,"description":"For string literals that look like module names, enables go to definition to go to the module.","scope":"resource"},"python.analysis.nodeExecutable":{"type":"string","default":"","markdownDescription":"Path to a Node.js executable to use for running the language server. If not specified, the language server will use the Node.js executable that ships with VS Code. Set this option if you're having trouble with Pylance running out of memory. See [here](https://aka.ms/AApf7ox) for more information.","scope":"machine"},"python.analysis.supportRestructuredText":{"type":"boolean","default":false,"markdownDescription":"Enable/disable support for reStructuredText in docstrings. Experimental, may cause docstrings to no longer render.","scope":"window","tags":["experimental"]},"python.analysis.cacheLSPData":{"type":"boolean","default":false,"description":"Cache LSP data for faster completions. Experimental, may cause Pylance to stop working.","scope":"machine","tags":["experimental"]},"python.analysis.regenerateStdLibIndices":{"type":"boolean","default":false,"markdownDescription":"Instead of relying on the shared stdlib.json indices for all Python versions, generate unique indices tailored to each workspace's specific Python version and platform. This regeneration process will affect performance, unlike using the prebuilt stdlib indices.","scope":"resource"},"python.analysis.aiCodeActions":{"type":"object","default":{},"description":"Enable/disable AI-assisted code actions. Requires the Copilot Chat extension to be enabled.","scope":"resource","properties":{"implementAbstractClasses":{"type":"boolean","default":false,"description":"Enable/disable AI assistance for implementing inherited abstract classes."}}},"python.analysis.completionOverrideExperiment":{"type":"boolean","default":false,"description":"Enable/disable experiment on completion override behavior.","scope":"resource","tags":["experimental"]},"python.analysis.languageServerMode":{"type":"string","default":"default","enum":["light","default"],"markdownDescription":"Select a predefined set of values for settings. Please check [this link](https://aka.ms/languageserver-mode) for more details.","enumDescriptions":["Set Pylance to do only essential work to make it light weight. See the link at the description to find out exactly what settings are set to what value.","Leave Pylance with default settings."],"scope":"resource"},"python.analysis.supportDocstringTemplate":{"type":"boolean","default":false,"description":"Enable/disable support for docstring generation. In a blank docstring, use `Ctrl+Space` to generate a docstring.","scope":"resource","tags":["experimental"]},"python.analysis.displayEnglishDiagnostics":{"type":"boolean","default":false,"description":"Display diagnostics in English regardless of VS Code's display language.","scope":"resource"}}},"jsonValidation":[{"fileMatch":"pyrightconfig.json","url":"./dist/schemas/pyrightconfig.schema.json"}],"semanticTokenTypes":[{"id":"module","description":"module","superType":"namespace"},{"id":"intrinsic","description":"intrinsic","superType":"operator"},{"id":"selfParameter","description":"self parameter","superType":"parameter"},{"id":"clsParameter","description":"cls parameter","superType":"parameter"},{"id":"magicFunction","description":"magic aka dunder function","superType":"function"},{"id":"builtinConstant","description":"constants like True, False, None, or __debug__","superType":"constant"},{"id":"parenthesis","description":"() parenthesis"},{"id":"bracket","description":"[] bracket"},{"id":"curlybrace","description":"{} curly brace"},{"id":"colon","description":"colon token"},{"id":"semicolon","description":"semicolon token"},{"id":"arrow","description":"arrow token"}],"semanticTokenModifiers":[{"id":"typeHint","description":"inside a type annotation"},{"id":"typeHintComment","description":"inside a comment style type annotation"},{"id":"decorator","description":"inside a decorator"},{"id":"builtin","description":"built-in identifier"},{"id":"overridden","description":"overridden token"}],"semanticTokenScopes":[{"language":"python","scopes":{"selfParameter":["variable.parameter.function.language.special.self.python"],"clsParameter":["variable.parameter.function.language.special.cls.python"],"magicFunction":["support.function.magic.python"],"*.typeHintComment":["comment.typehint.type.notation.python"],"*.overridden":["support.function.magic.python"],"function.decorator":["meta.function.decorator.python"],"class.decorator":["meta.function.decorator.python"],"builtinConstant":["constant.language.python"],"parenthesis":["source.python"],"bracket":["source.python"],"curlybrace":["source.python"],"colon":["punctuation.separator.colon.python"],"semicolon":["source.python"],"arrow":["punctuation.separator.annotation.result.python"]}}]},"scripts":{"clean":"shx rm -rf ./dist ./out NOTICE.txt","package":"vsce package --githubBranch main","vscode:prepublish":"npm run clean && shx cp ../../NOTICE.txt . && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode production --progress","webpack":"node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --progress","webpack-dev":"npm run clean && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --watch --progress","webpack-dev-fast":"npm run clean && webpack --env fast --mode development --watch --progress","build:tests":"tsc","watch:tests":"tsc --watch","encryptText":"ts-node --project ./tsconfig.json -r tsconfig-paths/register ./src/encryptText.ts","test":"npm run webpack && npm run test:extension && npm run test:web","test:extension":"npm run build:tests && node ./src/tests/runTests.js extension","test:smoke":"npm run build:tests && node ./src/tests/runTests.js smoke","test:web":"npm run webpack && node ./build/launchWebTests.js","test:copytestbundle":"shx cp ./dist/browser.tests/web/index.bundle.js ./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js","test:web:exists":"vscode-test-web --coi --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose","test:web:exists:nocoi":"vscode-test-web --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose"},"devDependencies":{"@types/jest":"^29.5.13","@types/mocha":"^10.0.8","@types/node":"^22.7.0","@types/source-map-support":"^0.5.10","@types/vscode":"^1.90.0","@types/webpack":"^5.28.5","@types/webpack-env":"^1.18.5","@types/which":"^3.0.4","@vscode/test-electron":"^2.4.1","@vscode/test-web":"^0.0.60","@vscode/vsce":"^2.32.0","copy-webpack-plugin":"^11.0.0","esbuild-loader":"^3.2.0","javascript-obfuscator":"4.1.1","jest":"^29.7.0","jest-cli":"^29.7.0","jest-environment-node":"^29.7.0","jest-junit":"^16.0.0","mocha":"^10.7.3","shx":"^0.3.4","source-map-support":"^0.5.21","terser-webpack-plugin":"^5.3.10","ts-jest":"^29.2.5","ts-loader":"^9.5.1","ts-mockito":"^2.6.1","ts-node":"^10.9.2","typescript":"~5.5.4","webpack":"^5.94.0","webpack-cli":"^5.1.4","webpack-env":"^0.8.0","webpack-obfuscator":"^3.5.1"},"dependencies":{"@vscode/extension-telemetry":"^0.9.7","@vscode/sync-api-common":"^0.9.0","@vscode/sync-api-service":"^0.9.0","buffer":"^6.0.3","events":"^3.3.0","path-browserify":"^1.0.1","semver":"^7.6.3","stream-browserify":"^3.0.0","typescript-char":"^0.0.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver":"^10.0.0-next.10","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-languageserver-types":"^3.17.6-next.5","vscode-tas-client":"^0.1.84","which":"^4.0.0"}},"location":{"$mid":1,"path":"/home/poseidon/.vscode/extensions/ms-python.vscode-pylance-2024.11.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1731587078399,"pinned":false,"source":"gallery","id":"364d2426-116a-433a-a5d8-a5098dc3afbd","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]}]}